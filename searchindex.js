Search.setIndex({"docnames": ["examples/demo_notebook", "examples/index", "examples/online_retail_analysis", "examples/upload_model", "index", "reference/api/DataFrame", "reference/api/DataFrame.agg", "reference/api/DataFrame.aggregate", "reference/api/DataFrame.columns", "reference/api/DataFrame.count", "reference/api/DataFrame.describe", "reference/api/DataFrame.drop", "reference/api/DataFrame.dtypes", "reference/api/DataFrame.empty", "reference/api/DataFrame.filter", "reference/api/DataFrame.get", "reference/api/DataFrame.groupby", "reference/api/DataFrame.head", "reference/api/DataFrame.hist", "reference/api/DataFrame.idxmax", "reference/api/DataFrame.idxmin", "reference/api/DataFrame.index", "reference/api/DataFrame.info", "reference/api/DataFrame.iterrows", "reference/api/DataFrame.itertuples", "reference/api/DataFrame.keys", "reference/api/DataFrame.mad", "reference/api/DataFrame.max", "reference/api/DataFrame.mean", "reference/api/DataFrame.median", "reference/api/DataFrame.min", "reference/api/DataFrame.mode", "reference/api/DataFrame.ndim", "reference/api/DataFrame.nunique", "reference/api/DataFrame.os_dtypes", "reference/api/DataFrame.os_info", "reference/api/DataFrame.os_match", "reference/api/DataFrame.os_query", "reference/api/DataFrame.quantile", "reference/api/DataFrame.query", "reference/api/DataFrame.sample", "reference/api/DataFrame.select_dtypes", "reference/api/DataFrame.shape", "reference/api/DataFrame.size", "reference/api/DataFrame.std", "reference/api/DataFrame.sum", "reference/api/DataFrame.tail", "reference/api/DataFrame.to_csv", "reference/api/DataFrame.to_html", "reference/api/DataFrame.to_numpy", "reference/api/DataFrame.to_pandas", "reference/api/DataFrame.to_string", "reference/api/DataFrame.values", "reference/api/DataFrame.var", "reference/api/Index", "reference/api/Series", "reference/api/Series.add", "reference/api/Series.describe", "reference/api/Series.div", "reference/api/Series.divide", "reference/api/Series.dtype", "reference/api/Series.dtypes", "reference/api/Series.empty", "reference/api/Series.es_dtypes", "reference/api/Series.filter", "reference/api/Series.floordiv", "reference/api/Series.head", "reference/api/Series.hist", "reference/api/Series.index", "reference/api/Series.isin", "reference/api/Series.isna", "reference/api/Series.isnull", "reference/api/Series.mad", "reference/api/Series.max", "reference/api/Series.mean", "reference/api/Series.median", "reference/api/Series.min", "reference/api/Series.mod", "reference/api/Series.mode", "reference/api/Series.mul", "reference/api/Series.multiply", "reference/api/Series.name", "reference/api/Series.ndim", "reference/api/Series.notna", "reference/api/Series.notnull", "reference/api/Series.nunique", "reference/api/Series.os_dtype", "reference/api/Series.os_info", "reference/api/Series.os_match", "reference/api/Series.pow", "reference/api/Series.quantile", "reference/api/Series.radd", "reference/api/Series.rdiv", "reference/api/Series.rdivide", "reference/api/Series.rename", "reference/api/Series.rfloordiv", "reference/api/Series.rmod", "reference/api/Series.rmul", "reference/api/Series.rmultiply", "reference/api/Series.rpow", "reference/api/Series.rsub", "reference/api/Series.rsubtract", "reference/api/Series.rtruediv", "reference/api/Series.sample", "reference/api/Series.shape", "reference/api/Series.size", "reference/api/Series.std", "reference/api/Series.sub", "reference/api/Series.subtract", "reference/api/Series.sum", "reference/api/Series.tail", "reference/api/Series.to_numpy", "reference/api/Series.to_pandas", "reference/api/Series.to_string", "reference/api/Series.truediv", "reference/api/Series.unique", "reference/api/Series.value_counts", "reference/api/Series.var", "reference/api/csv_to_opensearch", "reference/api/groupby.DataFrameGroupBy", "reference/api/groupby.DataFrameGroupBy.agg", "reference/api/groupby.DataFrameGroupBy.aggregate", "reference/api/groupby.DataFrameGroupBy.count", "reference/api/groupby.DataFrameGroupBy.mad", "reference/api/groupby.DataFrameGroupBy.max", "reference/api/groupby.DataFrameGroupBy.mean", "reference/api/groupby.DataFrameGroupBy.median", "reference/api/groupby.DataFrameGroupBy.min", "reference/api/groupby.DataFrameGroupBy.nunique", "reference/api/groupby.DataFrameGroupBy.quantile", "reference/api/groupby.DataFrameGroupBy.std", "reference/api/groupby.DataFrameGroupBy.sum", "reference/api/groupby.DataFrameGroupBy.var", "reference/api/groupby.GroupBy", "reference/api/ml_commons_upload_api", "reference/api/opensearch_to_pandas", "reference/api/pandas_to_opensearch", "reference/dataframe", "reference/general_utility_functions", "reference/index", "reference/indexing", "reference/io", "reference/mlcommons", "reference/series"], "filenames": ["examples/demo_notebook.ipynb", "examples/index.rst", "examples/online_retail_analysis.ipynb", "examples/upload_model.ipynb", "index.rst", "reference/api/DataFrame.rst", "reference/api/DataFrame.agg.rst", "reference/api/DataFrame.aggregate.rst", "reference/api/DataFrame.columns.rst", "reference/api/DataFrame.count.rst", "reference/api/DataFrame.describe.rst", "reference/api/DataFrame.drop.rst", "reference/api/DataFrame.dtypes.rst", "reference/api/DataFrame.empty.rst", "reference/api/DataFrame.filter.rst", "reference/api/DataFrame.get.rst", "reference/api/DataFrame.groupby.rst", "reference/api/DataFrame.head.rst", "reference/api/DataFrame.hist.rst", "reference/api/DataFrame.idxmax.rst", "reference/api/DataFrame.idxmin.rst", "reference/api/DataFrame.index.rst", "reference/api/DataFrame.info.rst", "reference/api/DataFrame.iterrows.rst", "reference/api/DataFrame.itertuples.rst", "reference/api/DataFrame.keys.rst", "reference/api/DataFrame.mad.rst", "reference/api/DataFrame.max.rst", "reference/api/DataFrame.mean.rst", "reference/api/DataFrame.median.rst", "reference/api/DataFrame.min.rst", "reference/api/DataFrame.mode.rst", "reference/api/DataFrame.ndim.rst", "reference/api/DataFrame.nunique.rst", "reference/api/DataFrame.os_dtypes.rst", "reference/api/DataFrame.os_info.rst", "reference/api/DataFrame.os_match.rst", "reference/api/DataFrame.os_query.rst", "reference/api/DataFrame.quantile.rst", "reference/api/DataFrame.query.rst", "reference/api/DataFrame.sample.rst", "reference/api/DataFrame.select_dtypes.rst", "reference/api/DataFrame.shape.rst", "reference/api/DataFrame.size.rst", "reference/api/DataFrame.std.rst", "reference/api/DataFrame.sum.rst", "reference/api/DataFrame.tail.rst", "reference/api/DataFrame.to_csv.rst", "reference/api/DataFrame.to_html.rst", "reference/api/DataFrame.to_numpy.rst", "reference/api/DataFrame.to_pandas.rst", "reference/api/DataFrame.to_string.rst", "reference/api/DataFrame.values.rst", "reference/api/DataFrame.var.rst", "reference/api/Index.rst", "reference/api/Series.rst", "reference/api/Series.add.rst", "reference/api/Series.describe.rst", "reference/api/Series.div.rst", "reference/api/Series.divide.rst", "reference/api/Series.dtype.rst", "reference/api/Series.dtypes.rst", "reference/api/Series.empty.rst", "reference/api/Series.es_dtypes.rst", "reference/api/Series.filter.rst", "reference/api/Series.floordiv.rst", "reference/api/Series.head.rst", "reference/api/Series.hist.rst", "reference/api/Series.index.rst", "reference/api/Series.isin.rst", "reference/api/Series.isna.rst", "reference/api/Series.isnull.rst", "reference/api/Series.mad.rst", "reference/api/Series.max.rst", "reference/api/Series.mean.rst", "reference/api/Series.median.rst", "reference/api/Series.min.rst", "reference/api/Series.mod.rst", "reference/api/Series.mode.rst", "reference/api/Series.mul.rst", "reference/api/Series.multiply.rst", "reference/api/Series.name.rst", "reference/api/Series.ndim.rst", "reference/api/Series.notna.rst", "reference/api/Series.notnull.rst", "reference/api/Series.nunique.rst", "reference/api/Series.os_dtype.rst", "reference/api/Series.os_info.rst", "reference/api/Series.os_match.rst", "reference/api/Series.pow.rst", "reference/api/Series.quantile.rst", "reference/api/Series.radd.rst", "reference/api/Series.rdiv.rst", "reference/api/Series.rdivide.rst", "reference/api/Series.rename.rst", "reference/api/Series.rfloordiv.rst", "reference/api/Series.rmod.rst", "reference/api/Series.rmul.rst", "reference/api/Series.rmultiply.rst", "reference/api/Series.rpow.rst", "reference/api/Series.rsub.rst", "reference/api/Series.rsubtract.rst", "reference/api/Series.rtruediv.rst", "reference/api/Series.sample.rst", "reference/api/Series.shape.rst", "reference/api/Series.size.rst", "reference/api/Series.std.rst", "reference/api/Series.sub.rst", "reference/api/Series.subtract.rst", "reference/api/Series.sum.rst", "reference/api/Series.tail.rst", "reference/api/Series.to_numpy.rst", "reference/api/Series.to_pandas.rst", "reference/api/Series.to_string.rst", "reference/api/Series.truediv.rst", "reference/api/Series.unique.rst", "reference/api/Series.value_counts.rst", "reference/api/Series.var.rst", "reference/api/csv_to_opensearch.rst", "reference/api/groupby.DataFrameGroupBy.rst", "reference/api/groupby.DataFrameGroupBy.agg.rst", "reference/api/groupby.DataFrameGroupBy.aggregate.rst", "reference/api/groupby.DataFrameGroupBy.count.rst", "reference/api/groupby.DataFrameGroupBy.mad.rst", "reference/api/groupby.DataFrameGroupBy.max.rst", "reference/api/groupby.DataFrameGroupBy.mean.rst", "reference/api/groupby.DataFrameGroupBy.median.rst", "reference/api/groupby.DataFrameGroupBy.min.rst", "reference/api/groupby.DataFrameGroupBy.nunique.rst", "reference/api/groupby.DataFrameGroupBy.quantile.rst", "reference/api/groupby.DataFrameGroupBy.std.rst", "reference/api/groupby.DataFrameGroupBy.sum.rst", "reference/api/groupby.DataFrameGroupBy.var.rst", "reference/api/groupby.GroupBy.rst", "reference/api/ml_commons_upload_api.rst", "reference/api/opensearch_to_pandas.rst", "reference/api/pandas_to_opensearch.rst", "reference/dataframe.rst", "reference/general_utility_functions.rst", "reference/index.rst", "reference/indexing.rst", "reference/io.rst", "reference/mlcommons.rst", "reference/series.rst"], "titles": ["Demo Notebook for Dataframe", "Examples", "Online Retail analysis", "Demo Notebook for Upload Models", "Opensearch-py-ml: DataFrames and Machine Learning backed by Opensearch", "DataFrame", "DataFrame.agg", "DataFrame.aggregate", "DataFrame.columns", "DataFrame.count", "DataFrame.describe", "DataFrame.drop", "DataFrame.dtypes", "DataFrame.empty", "DataFrame.filter", "DataFrame.get", "DataFrame.groupby", "DataFrame.head", "DataFrame.hist", "DataFrame.idxmax", "DataFrame.idxmin", "DataFrame.index", "DataFrame.info", "DataFrame.iterrows", "DataFrame.itertuples", "DataFrame.keys", "DataFrame.mad", "DataFrame.max", "DataFrame.mean", "DataFrame.median", "DataFrame.min", "DataFrame.mode", "DataFrame.ndim", "DataFrame.nunique", "DataFrame.os_dtypes", "DataFrame.os_info", "DataFrame.os_match", "DataFrame.os_query", "DataFrame.quantile", "DataFrame.query", "DataFrame.sample", "DataFrame.select_dtypes", "DataFrame.shape", "DataFrame.size", "DataFrame.std", "DataFrame.sum", "DataFrame.tail", "DataFrame.to_csv", "DataFrame.to_html", "DataFrame.to_numpy", "DataFrame.to_pandas", "DataFrame.to_string", "DataFrame.values", "DataFrame.var", "opensearch_py_ml.Index", "Series", "Series.add", "Series.describe", "Series.div", "Series.divide", "Series.dtype", "Series.dtypes", "Series.empty", "Series.es_dtypes", "Series.filter", "Series.floordiv", "Series.head", "Series.hist", "Series.index", "Series.isin", "Series.isna", "Series.isnull", "Series.mad", "Series.max", "Series.mean", "Series.median", "Series.min", "Series.mod", "Series.mode", "Series.mul", "Series.multiply", "Series.name", "Series.ndim", "Series.notna", "Series.notnull", "Series.nunique", "Series.os_dtype", "Series.os_info", "Series.os_match", "Series.pow", "Series.quantile", "Series.radd", "Series.rdiv", "Series.rdivide", "Series.rename", "Series.rfloordiv", "Series.rmod", "Series.rmul", "Series.rmultiply", "Series.rpow", "Series.rsub", "Series.rsubtract", "Series.rtruediv", "Series.sample", "Series.shape", "Series.size", "Series.std", "Series.sub", "Series.subtract", "Series.sum", "Series.tail", "Series.to_numpy", "Series.to_pandas", "Series.to_string", "Series.truediv", "Series.unique", "Series.value_counts", "Series.var", "csv_to_opensearch", "groupby.DataFrameGroupBy", "groupby.DataFrameGroupBy.agg", "groupby.DataFrameGroupBy.aggregate", "groupby.DataFrameGroupBy.count", "groupby.DataFrameGroupBy.mad", "groupby.DataFrameGroupBy.max", "groupby.DataFrameGroupBy.mean", "groupby.DataFrameGroupBy.median", "groupby.DataFrameGroupBy.min", "groupby.DataFrameGroupBy.nunique", "groupby.DataFrameGroupBy.quantile", "groupby.DataFrameGroupBy.std", "groupby.DataFrameGroupBy.sum", "groupby.DataFrameGroupBy.var", "groupby.GroupBy", "upload_model", "opensearch_to_pandas", "pandas_to_opensearch", "DataFrame", "General Utility Functions", "API Reference", "Index", "Input/Output", "MLCommons Support", "Series"], "terms": {"2": [0, 2, 5, 6, 7, 9, 11, 15, 16, 17, 22, 23, 24, 26, 28, 31, 32, 37, 38, 46, 49, 55, 56, 58, 59, 65, 77, 78, 79, 80, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 107, 108, 111, 114, 118, 123, 125, 126, 128, 129, 130, 131, 135, 136], "load_ext": [0, 2, 3], "autoreload": [0, 2, 3], "3": [0, 2, 3, 5, 11, 15, 16, 17, 18, 23, 24, 29, 31, 37, 38, 45, 49, 53, 55, 56, 58, 59, 65, 67, 77, 78, 79, 80, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 107, 108, 111, 114, 118, 122, 123, 126, 128, 129, 130, 131, 132, 135, 136], "thi": [0, 2, 3, 4, 5, 9, 14, 17, 22, 33, 35, 36, 43, 46, 48, 49, 51, 52, 54, 55, 64, 88, 94, 105, 111, 113, 116, 119, 134, 135, 136, 139], "stop": [0, 2, 3], "py": [0, 2, 3, 24, 115, 139], "ml": [0, 2, 3, 9, 24, 115, 134, 139], "from": [0, 2, 3, 5, 11, 14, 15, 18, 22, 36, 40, 64, 67, 88, 94, 118, 135, 136], "yell": [0, 2, 3], "everi": [0, 2, 3, 54, 135], "time": [0, 2, 3, 4, 43, 105], "connect": [0, 2, 3], "made": [0, 2, 3], "warn": [0, 2, 3], "filterwarn": [0, 2, 3], "ignor": [0, 2, 3, 6, 7, 10, 11, 36, 57, 88, 120, 121, 136], "4": [0, 2, 3, 5, 6, 7, 11, 15, 16, 23, 24, 31, 35, 36, 38, 49, 55, 56, 58, 59, 65, 77, 78, 79, 80, 85, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 107, 108, 111, 114, 118, 124, 125, 126, 127, 129, 131, 132, 135, 136], "demonstr": [0, 2, 3], "support": [0, 2, 3, 6, 7, 10, 11, 27, 28, 30, 45, 57, 73, 74, 75, 76, 94, 109, 118, 139], "pd": [0, 2, 3, 8, 115, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 136], "numpi": [0, 2, 3, 4, 49, 52, 111], "np": [0, 2, 3, 6, 7, 18, 41, 99], "matplotlib": [0, 2, 3, 67], "pyplot": [0, 2, 3, 67], "plt": [0, 2, 3, 18, 67], "oml": [0, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 49, 52, 53, 55, 56, 57, 58, 59, 61, 65, 67, 68, 72, 73, 74, 75, 76, 77, 78, 79, 80, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 106, 107, 108, 109, 111, 114, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136], "opensearchpi": [0, 2, 3, 55, 118], "standard": [0, 2, 3, 26, 44, 106, 130], "test": [0, 2, 3, 17, 46, 136], "set": [0, 2, 3, 10, 24, 36, 48, 51, 57, 88, 113], "consist": [0, 2, 3, 57], "result": [0, 2, 3, 22, 39, 57], "conftest": [0, 2, 3], "5": [0, 2, 3, 5, 11, 17, 23, 24, 31, 35, 37, 38, 46, 49, 56, 58, 59, 65, 66, 67, 77, 78, 79, 80, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 107, 108, 110, 111, 114, 118, 123, 128, 129, 135], "cluster_url": [0, 2, 3], "http": [0, 2, 3], "localhost": [0, 2, 3], "9200": [0, 2, 3], "def": [0, 2, 3], "get_os_cli": [0, 2, 3], "usernam": [0, 2, 3], "admin": [0, 2, 3], "password": [0, 2, 3], "param": [0, 2, 3], "cluster": [0, 2, 3, 134, 135], "url": [0, 2, 3], "like": [0, 2, 3, 14, 37, 38, 55, 64, 90, 129, 140], "te": [0, 2, 3], "netwo": [0, 2, 3], "1s12ba42br23v": [0, 2, 3], "ff1736fa7db98ff2": [0, 2, 3], "elb": [0, 2, 3], "u": [0, 2, 3, 16, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132], "west": [0, 2, 3], "amazonaw": [0, 2, 3], "com": [0, 2, 3], "443": [0, 2, 3], "return": [0, 2, 3, 31, 49, 52, 60, 62, 78, 86, 111], "host": [0, 2, 3], "http_auth": [0, 2, 3], "verify_cert": [0, 2, 3], "fals": [0, 2, 3, 5, 6, 7, 11, 13, 16, 18, 23, 24, 26, 27, 28, 29, 30, 31, 35, 36, 38, 44, 45, 48, 50, 51, 53, 62, 88, 112, 113, 118, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136], "6": [0, 2, 3, 11, 16, 27, 31, 33, 36, 53, 78, 95, 118, 120, 121, 124, 129, 131], "creat": [0, 2, 3, 9, 22, 55, 118, 134, 135, 136], "an": [0, 2, 5, 9, 14, 24, 35, 36, 37, 43, 46, 48, 51, 54, 55, 64, 70, 71, 83, 84, 88, 105, 113, 118, 135, 136, 139, 140], "flight": [0, 5, 6, 7, 8, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 23, 24, 26, 27, 28, 29, 30, 34, 35, 38, 39, 41, 44, 45, 46, 49, 53, 55, 57, 61, 67, 68, 72, 73, 74, 75, 76, 85, 90, 94, 106, 109, 111, 116, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135], "7": [0, 2, 3, 31, 36, 78, 118, 128, 131], "oml_flight": [0, 19, 20, 38, 90, 129], "8": [0, 2, 3, 6, 7, 31, 45, 78, 118, 136], "type": [0, 2, 10, 11, 12, 15, 17, 22, 33, 34, 36, 46, 49, 57, 61, 86, 111, 135, 136], "same": [0, 15, 27, 28, 29, 30, 38, 44, 45, 53, 123, 124, 125, 126, 127, 128, 130, 131, 132], "9": [0, 3, 6, 7, 31, 37, 78, 95, 118], "pd_flight": 0, "opensearch_to_panda": [0, 49, 52, 111, 136, 138], "10": [0, 2, 5, 16, 18, 31, 35, 37, 67, 78, 97, 98, 116, 118, 122, 126, 128, 135], "core": [0, 5, 49, 111, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136], "frame": [0, 2, 49, 135, 136], "11": [0, 2, 5, 27, 31, 35, 36, 78, 118, 124, 125, 126, 135], "39": [0, 2, 3, 31, 78, 90, 124, 125], "avgticketpric": [0, 5, 6, 7, 8, 10, 12, 16, 19, 20, 23, 24, 26, 27, 28, 29, 30, 34, 38, 41, 44, 45, 49, 53, 57, 61, 72, 73, 74, 75, 76, 106, 109, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135], "cancel": [0, 5, 8, 16, 23, 24, 26, 27, 28, 29, 30, 41, 44, 45, 53, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135], "carrier": [0, 8, 15, 21, 49, 55, 68, 85, 94, 111, 116], "dest": [0, 8, 17, 41, 46], "destairportid": [0, 8, 35], "destcitynam": [0, 8], "destcountri": [0, 6, 7, 8, 16, 26, 27, 28, 29, 30, 44, 45, 53, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132], "destloc": [0, 8], "destregion": [0, 8], "destweath": [0, 8], "distancekilomet": [0, 6, 7, 8], "distancemil": [0, 8], "flightdelai": [0, 8], "flightdelaymin": [0, 8, 10, 19, 20, 35, 38, 39, 129], "flightdelaytyp": [0, 8], "flightnum": [0, 8], "flighttimehour": [0, 8], "flighttimemin": [0, 8, 67], "origin": [0, 8, 12, 17, 34, 46, 61], "originairportid": [0, 8, 35], "origincitynam": [0, 8], "origincountri": [0, 8], "originloc": [0, 8], "originregion": [0, 8], "originweath": [0, 8, 67], "dayofweek": [0, 5, 8, 12, 16, 19, 20, 26, 27, 28, 29, 30, 34, 38, 41, 44, 45, 53, 61, 90, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135], "timestamp": [0, 5, 6, 7, 8, 12, 16, 19, 20, 26, 27, 28, 29, 30, 31, 34, 35, 38, 41, 44, 45, 53, 61, 90, 123, 124, 125, 126, 127, 129, 132, 135, 136], "object": [0, 2, 8, 10, 11, 12, 15, 17, 19, 20, 22, 23, 24, 26, 27, 28, 29, 30, 34, 35, 41, 43, 44, 45, 46, 49, 53, 55, 56, 57, 60, 61, 78, 94, 105, 111, 136, 139, 140], "12": [0, 2, 27, 31, 78, 90, 118, 124, 135], "13": [0, 2, 5, 16, 88, 95, 118, 126, 135], "float64": [0, 2, 6, 7, 12, 26, 27, 28, 29, 30, 38, 41, 44, 45, 53, 56, 57, 58, 59, 61, 65, 77, 79, 80, 89, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 107, 108, 114, 120, 121, 123, 124, 125, 126, 127, 128, 130, 131, 132, 136], "bool": [0, 2, 6, 7, 13, 16, 22, 24, 26, 27, 28, 29, 30, 31, 35, 36, 37, 38, 41, 44, 45, 50, 53, 70, 71, 72, 73, 74, 75, 76, 83, 84, 88, 106, 109, 112, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 130, 131, 132, 134, 135, 136], "int64": [0, 2, 9, 12, 33, 35, 41, 56, 58, 59, 61, 65, 77, 79, 80, 89, 99, 107, 108, 114, 116, 136], "datetime64": [0, 12, 35, 41, 61, 78, 90, 136], "n": [0, 2, 9, 12, 17, 35, 40, 41, 46, 61, 66, 78, 90, 103, 110, 136], "length": [0, 2, 15, 55, 94, 113, 118], "27": [0, 2, 5, 16, 39, 90, 118, 124, 126, 127, 135], "14": [0, 2, 5, 31, 35, 78, 96, 124, 125, 135], "15": [0, 2, 31, 35, 38, 78, 125], "includ": [0, 2, 18, 22, 35, 41, 118, 136], "number": [0, 3, 9, 17, 18, 31, 40, 41, 42, 43, 46, 78, 85, 104, 105, 116, 118, 136], "841": [0, 5, 23, 24, 49, 135], "265642": [0, 5, 23, 24, 49, 135], "16492": 0, "326654": 0, "1030": 0, "770416": 0, "882": [0, 5, 23, 24, 49, 135], "982662": [0, 5, 23, 24, 49, 135], "8823": 0, "400140": 0, "464": [0, 2], "389481": 0, "190": [0, 5, 23, 24, 49, 135], "636904": [0, 5, 23, 24, 49, 135], "000000": [0, 2, 10, 16, 26, 27, 29, 30, 38, 57], "181": [0, 5, 23, 24, 49, 135], "694216": [0, 5, 23, 24, 49, 135], "555": 0, "737767": 0, "222": 0, "749059": 0, "730": [0, 5, 23, 24, 49, 135], "041778": [0, 5, 23, 24, 49, 135], "13358": 0, "244200": 0, "785": 0, "779071": 0, "13054": [0, 15, 46, 55, 94], "1080": 0, "446279": 0, "8058": 0, "581753": 0, "402": 0, "929088": 0, "13055": [0, 15, 46, 55, 94], "646": [0, 125], "612941": 0, "7088": 0, "598322": 0, "644": 0, "418029": 0, "13056": [0, 15, 46, 55, 94], "997": 0, "751876": 0, "10920": 0, "652972": 0, "937": 0, "540811": 0, "13057": [0, 15, 46, 55, 94], "1102": 0, "814465": 0, "18748": 0, "859647": 0, "1697": 0, "404971": 0, "13058": [0, 15, 46, 55, 94], "858": 0, "144337": 0, "16809": 0, "141923": 0, "1610": 0, "761827": 0, "13059": [0, 10, 15, 39, 55, 57, 94, 135], "row": [0, 2, 5, 11, 14, 16, 17, 23, 24, 31, 35, 36, 37, 40, 42, 43, 46, 49, 64, 78, 88, 104, 105, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 135, 136], "16": [0, 2, 38, 118, 125, 126], "17": [0, 2, 5, 16, 124, 125, 126, 127, 135], "18": [0, 2, 5, 31, 58, 59, 65, 78, 114, 125, 126, 135], "19": [0, 2, 16, 28, 31, 78, 96, 126, 127, 131], "20": [0, 2, 28, 31, 35, 38, 78, 90, 124, 126], "note": [0, 10, 21, 33, 57, 68, 115, 116, 135], "doe": [0, 14, 64, 94, 118, 136], "mirror": [0, 5], "21": [0, 2, 4, 28, 29, 31, 38, 78, 90, 118, 124, 125, 126], "13049": 0, "13050": 0, "13051": 0, "13052": 0, "13053": 0, "22": [0, 2, 31, 37, 78, 90, 124, 125, 126], "nbval_ignore_output": [0, 2], "lt": 0, "0x1131744c0": 0, "gt": [0, 2, 35], "24": [0, 2, 16, 31, 78, 127], "os_index_field": [0, 2, 5, 21, 35, 54, 55, 68], "_id": [0, 2, 5, 21, 35, 54, 68, 118, 136], "i": [0, 2, 4, 5, 6, 7, 9, 10, 11, 13, 14, 17, 18, 22, 27, 28, 29, 30, 31, 38, 42, 44, 45, 46, 49, 52, 53, 54, 55, 57, 62, 64, 70, 71, 83, 84, 94, 111, 115, 116, 118, 120, 121, 123, 124, 125, 126, 127, 128, 130, 131, 132, 134, 136], "25": [0, 2, 16, 18, 35, 37, 67, 118], "arrai": [0, 18, 38, 49, 90, 111, 129], "2656419677076": [0, 24, 49], "kibana": [0, 15, 49, 55, 94, 111, 116], "airlin": [0, 15, 49, 55, 94, 111, 116], "sunni": [0, 67], "2018": [0, 5, 6, 7, 16, 27, 28, 29, 30, 35, 38, 90, 124, 125, 126, 127, 135], "01": [0, 2, 5, 6, 7, 16, 28, 29, 30, 35, 38, 90, 118, 124, 125, 126, 127, 135], "00": [0, 2, 5, 6, 7, 16, 30, 31, 35, 78, 90, 124, 127, 135], "9826615595518": [0, 24, 49], "logstash": [0, 15, 49, 55, 94, 111, 116], "airwai": [0, 15, 49, 55, 94, 111, 116], "clear": 0, "6369038508356": [0, 24, 49], "rain": 0, "7518761454494": 0, "02": [0, 5, 6, 7, 16, 27, 31, 35, 38, 78, 90, 124, 125], "04": [0, 16, 31, 38, 45, 78, 90, 124, 125, 126, 127, 131], "09": [0, 16, 31, 35, 38, 78, 90, 124, 126, 127], "8144645388556": 0, "jetbeat": [0, 15, 55, 94, 116], "hail": 0, "08": [0, 2, 16, 31, 35, 78, 124, 127], "28": [0, 2, 5, 118, 125, 135], "1443369038839": 0, "54": [0, 29, 56, 88, 90, 91, 125, 131], "34": [0, 2, 31, 78, 107, 108], "26": [0, 2, 58, 59, 65, 114, 118], "try": [0, 33], "except": [0, 48, 51, 113], "attributeerror": 0, "e": [0, 5, 6, 7, 9, 116, 118, 136], "print": [0, 2, 3, 22, 23, 24, 35, 49, 111, 134], "method": [0, 2, 18, 22, 33, 50, 119, 134, 139, 140], "would": [0, 49, 52, 111], "scan": [0, 49, 52, 111], "scroll": [0, 49, 52, 111], "entir": [0, 2, 48, 49, 51, 52, 111, 113, 135], "": [0, 2, 4, 5, 6, 7, 10, 18, 21, 36, 38, 41, 49, 52, 57, 68, 72, 73, 74, 75, 76, 85, 88, 90, 106, 109, 111, 117, 129, 134], "memori": [0, 4, 5, 22, 49, 52, 54, 111, 135], "If": [0, 4, 6, 7, 11, 13, 16, 24, 36, 37, 42, 49, 52, 55, 88, 111], "explicitli": [0, 48, 51, 113], "requir": [0, 36, 49, 52, 54, 111, 135], "suffici": 0, "call": [0, 6, 7, 18, 49, 52, 94, 111, 118, 136, 140], "ed": 0, "ed_df": 0, "true": [0, 2, 3, 5, 6, 7, 11, 13, 14, 16, 18, 23, 24, 26, 27, 28, 29, 30, 31, 35, 36, 38, 44, 45, 47, 48, 51, 53, 62, 64, 67, 88, 113, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136], "33": [0, 2, 5, 88, 124, 125, 135], "05": [0, 5, 16, 124, 127, 131, 135], "29": [0, 2, 124, 135], "42": [0, 2, 125, 126, 131], "41": [0, 35, 118], "57": [0, 38, 90, 126], "30": [0, 2, 16, 37, 90, 127], "31": [0, 2, 5, 16, 124, 127], "32": [0, 2, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132], "name": [0, 2, 6, 7, 8, 14, 15, 23, 24, 25, 38, 55, 56, 57, 58, 59, 64, 65, 77, 78, 79, 80, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 107, 108, 111, 113, 114, 116, 118, 136, 143], "35": [0, 2, 16, 100, 101, 126], "frankfurt": [0, 17], "am": [0, 17, 35], "main": [0, 17], "airport": [0, 17, 46], "cape": [0, 17], "town": [0, 17], "intern": [0, 17, 35, 46, 118], "venic": [0, 17], "marco": [0, 17], "polo": [0, 17], "napl": 0, "licenciado": [0, 46], "benito": [0, 46], "juarez": [0, 46], "pisa": [0, 46], "winnipeg": [0, 46], "jame": [0, 46], "armstrong": [0, 46], "richardson": [0, 46], "internat": 0, "itami": [0, 46], "adelaid": [0, 46], "list": [0, 2, 5, 6, 7, 9, 14, 16, 35, 36, 38, 64, 90, 116, 118, 119, 120, 121, 129, 136], "input": [0, 4, 67, 139], "current": [0, 4, 5, 6, 7, 10, 16, 27, 28, 30, 37, 45, 54, 57, 73, 74, 75, 76, 109, 118], "36": [0, 2, 5, 16, 31, 56, 58, 59, 65, 77, 78, 79, 80, 89, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 107, 108, 114, 135], "typeerror": 0, "unhash": 0, "37": [0, 16, 56, 91, 135], "900": 0, "960": 0, "869736": 0, "975": 0, "812632": 0, "38": [0, 2, 31, 56, 78, 127, 131], "311": 0, "946": 0, "358410": 0, "51": [0, 5, 38, 107, 108, 127], "651": 0, "383864": 0, "03": [0, 6, 7, 16, 45, 124, 131], "950": [0, 2], "907": 0, "836523": 0, "12820": 0, "909": 0, "973606": 0, "12906": 0, "983": 0, "429244": 0, "06": [0, 2, 5, 6, 7, 16, 29, 31, 45, 78, 124, 125, 127, 131], "58": [0, 31, 78, 125], "12918": 0, "1136": 0, "678150": 0, "12919": 0, "1105": 0, "211803": 0, "13013": 0, "1055": 0, "350213": 0, "68": [0, 118], "qualifi": 0, "fail": [0, 118, 136], "aggreg": [0, 6, 9, 33, 54, 116, 120, 137], "std": [0, 2, 6, 7, 10, 26, 57, 137, 143], "261629e": [0, 6, 7], "07": [0, 2, 6, 7, 118, 125], "204365e": [0, 6, 7, 45], "000000e": [0, 6, 7], "000205e": [0, 6, 7], "578438e": 0, "663969e": 0, "onli": [0, 2, 6, 7, 9, 10, 33, 41, 57, 94, 116], "numer": [0, 2, 10, 26, 27, 28, 29, 30, 31, 33, 44, 45, 53, 57, 73, 74, 75, 76, 109, 116, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132], "43": [0, 38, 135], "578614e": [0, 6, 7], "664071e": [0, 6, 7], "44": [0, 16, 31, 78, 126, 127], "45": [0, 2, 28, 36, 42, 118, 124, 127, 131], "46": [0, 2, 31, 33, 38, 78, 122, 126, 128], "628": [0, 10, 28, 57, 74], "253689": [0, 10, 28, 57], "7092": 0, "142455": 0, "511": 0, "127842": 0, "835975": [0, 28], "266": [0, 6, 7, 10, 44, 57, 88, 106], "396861": 0, "4578": [0, 6, 7], "438497": 0, "334": 0, "753952": 0, "939439": 0, "100": [0, 2, 6, 7, 10, 16, 30, 57, 76, 96, 120, 121, 127], "020528": 0, "409": 0, "893816": 0, "2459": 0, "705673": 0, "252": 0, "333192": 0, "50": [0, 2, 27, 38, 90, 126], "640": [0, 29, 38, 75], "556668": 0, "7610": 0, "330866": 0, "503": 0, "045170": 0, "75": [0, 2, 38, 90, 118], "842": [0, 38], "185470": 0, "9736": 0, "637600": 0, "720": 0, "416036": 0, "1199": [0, 10, 16, 27, 57, 73, 120, 121, 124], "729053": 0, "19881": 0, "482315": 0, "1902": 0, "902032": 0, "mai": [0, 118, 136, 137], "vari": [0, 10, 57], "due": 0, "47": [0, 10, 16, 118, 125, 127], "128494": [0, 28], "407061": [0, 44], "334664": [0, 44], "766770": 0, "939513": [0, 44], "020531": [0, 10, 16, 30, 57, 120, 121, 127], "410": 0, "008918": 0, "251": [0, 16, 130], "938710": 0, "387285": [0, 38], "148975": 0, "213490": [0, 38], "505705": 0, "729004": [0, 10, 16, 27, 57, 120, 121, 124], "901978": 0, "48": [0, 90, 125, 126], "class": [0, 5, 22, 48, 49, 54, 55, 111, 119, 135, 136, 139], "entri": [0, 22], "total": [0, 2, 3, 22, 94, 118], "non": [0, 9, 22, 27, 28, 30, 36, 45, 73, 74, 75, 76, 83, 84, 88, 109], "null": [0, 19, 20, 22], "23": [0, 2, 27, 29, 31, 38, 78, 90, 124, 125, 126], "usag": [0, 18, 22, 67], "mb": 0, "49": 0, "64": [0, 118], "000": [0, 2, 126], "byte": [0, 34], "storag": [0, 22], "714": 0, "numeric_onli": [0, 6, 7, 16, 26, 27, 28, 29, 30, 31, 38, 44, 45, 53, 72, 73, 74, 75, 76, 106, 109, 117, 120, 121, 123, 124, 125, 126, 127, 128, 130, 131, 132], "12353": 0, "780369": 0, "360": [0, 10, 35], "715034": 0, "482422": 0, "780273": 0, "52": [0, 35, 100, 101], "53": [0, 31, 35, 56, 58, 59, 65, 77, 78, 79, 80, 89, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 107, 108, 114, 126], "4406": 0, "853013": 0, "251168": 0, "335171": [0, 10], "518797": 0, "55": [0, 2, 37, 38, 56, 125], "142457": 0, "853010": 0, "56": [0, 118, 125, 126], "678000e": [0, 45], "754909e": 0, "280000e": 0, "181500e": 0, "112470e": 0, "674818e": 0, "703500e": [0, 45], "156": 0, "59": [0, 90, 124], "60": [0, 35, 39, 48, 51, 113], "se": [0, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132], "bd": 0, "IT": 0, "ch": 0, "zh": 0, "ru": [0, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132], "amu": 0, "dc": 0, "61": [0, 118], "62": [0, 118], "hist": [0, 2, 137, 143], "figsiz": [0, 2, 18, 67], "show": [0, 2, 67, 135], "63": [0, 16], "oml_flights2": 0, "65": [0, 2], "os_info": [0, 2, 137, 143], "os_index_pattern": [0, 2, 5, 35, 55], "is_source_field": [0, 2, 35], "map": [0, 2, 12, 33, 35, 42, 55, 61, 118, 136], "capabl": [0, 2, 4, 35], "os_field_nam": [0, 2, 35], "is_sourc": [0, 2, 35], "os_dtyp": [0, 2, 35, 137, 143], "os_date_format": [0, 2, 35], "pd_dtype": [0, 2, 35], "is_search": [0, 2, 35], "is_aggregat": [0, 2, 35], "is_script": [0, 2, 35], "aggregatable_os_field_nam": [0, 2, 35], "date": [0, 4, 34, 35], "strict_date_hour_minute_second": [0, 35], "keyword": [0, 2, 6, 7, 9, 33, 34, 35, 36, 88, 116, 136], "none": [0, 2, 5, 6, 7, 11, 14, 15, 16, 18, 22, 24, 27, 28, 29, 30, 35, 36, 38, 40, 41, 44, 45, 47, 48, 49, 51, 53, 54, 55, 64, 67, 72, 73, 74, 75, 76, 88, 103, 106, 109, 111, 113, 117, 118, 120, 121, 123, 124, 125, 126, 127, 128, 130, 131, 132, 134, 136], "integ": [0, 35, 65, 95], "oper": [0, 6, 7, 11, 16, 35, 54, 56, 58, 59, 65, 77, 79, 80, 89, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 107, 108, 114, 139], "task": [0, 2, 35], "boolean_filt": [0, 2, 35], "must": [0, 2, 5, 6, 7, 35, 37, 42, 54], "term": [0, 2, 35, 116], "rang": [0, 2, 35, 54], "sort_field": [0, 2, 35], "_doc": [0, 2, 23, 24, 35], "size": [0, 2, 5, 35, 118, 137, 143], "sort_param": [0, 2, 35], "desc": [0, 2, 35], "_sourc": [0, 2, 35, 118], "bodi": [0, 2, 35, 36, 88], "post_process": [0, 2, 35], "sort_index": [0, 2, 23, 24, 35], "demo": [1, 4], "notebook": [1, 4, 48], "datafram": [1, 2, 3, 54, 56, 57, 58, 59, 61, 64, 65, 67, 68, 72, 73, 74, 75, 76, 77, 78, 79, 80, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 108, 109, 111, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136, 139, 140], "onlin": [1, 4], "retail": [1, 4], "analysi": [1, 4], "upload": [1, 134, 139], "model": [1, 134, 139], "opensearch": [2, 3, 5, 8, 9, 12, 21, 22, 23, 24, 25, 33, 34, 35, 36, 37, 42, 47, 48, 49, 52, 54, 55, 61, 68, 86, 88, 94, 104, 111, 115, 116, 118, 134, 135, 136, 139], "panda": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 60, 61, 64, 67, 68, 70, 71, 72, 73, 74, 75, 76, 78, 82, 83, 84, 85, 90, 94, 105, 106, 109, 111, 113, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136, 139], "opensearch_py_ml": [2, 3, 5, 14, 16, 17, 21, 22, 23, 24, 35, 36, 37, 39, 40, 41, 46, 49, 50, 55, 56, 58, 59, 64, 65, 68, 70, 71, 77, 79, 80, 83, 84, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 107, 108, 111, 114, 115, 116, 118, 119, 134, 135, 136], "To": 2, "let": 2, "read": [2, 4, 36, 88, 118, 135, 136], "csv": [2, 47, 118], "file": [2, 3, 47, 118, 134, 139], "popul": [2, 39, 136], "local": 2, "df": [2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 21, 22, 23, 24, 26, 27, 28, 29, 30, 33, 34, 35, 36, 37, 39, 41, 42, 44, 45, 46, 53, 56, 57, 58, 59, 61, 65, 67, 68, 77, 79, 80, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 107, 108, 114, 116, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132], "csv_to_opensearch": [2, 141], "gz": 2, "os_client": [2, 5, 55, 118, 136], "os_dest_index": [2, 118, 136], "es_if_exist": 2, "replac": [2, 118, 136], "os_dropna": [2, 118, 136], "es_refresh": 2, "compress": [2, 47, 118], "gzip": 2, "index_col": [2, 118], "here": 2, "we": [2, 3, 4, 6, 7, 18, 24, 33, 48, 51, 113, 116], "see": [2, 18, 22, 25, 67], "field": [2, 5, 8, 9, 17, 21, 23, 24, 25, 33, 36, 46, 54, 55, 68, 88, 94, 116, 136], "wa": [2, 3, 94], "us": [2, 3, 4, 5, 6, 7, 9, 16, 17, 33, 36, 37, 38, 40, 46, 54, 67, 88, 90, 118, 120, 121, 129, 134, 136, 137, 140], "our": 2, "next": 2, "can": [2, 3, 5, 9, 18, 24, 33, 36, 48, 51, 54, 55, 113, 116, 135], "check": [2, 36, 88], "which": [2, 3, 4, 6, 7, 14, 27, 28, 29, 30, 31, 36, 38, 44, 45, 53, 54, 64, 88, 120, 121, 123, 124, 125, 126, 127, 128, 130, 131, 132], "ar": [2, 4, 6, 7, 9, 11, 12, 14, 16, 18, 19, 20, 27, 28, 29, 30, 36, 38, 42, 44, 45, 53, 55, 61, 64, 73, 74, 75, 76, 88, 109, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 137, 139, 140], "avail": [2, 140], "paramet": 2, "when": [2, 6, 7, 36, 48, 51, 88, 113, 136], "instanti": 2, "allow": [2, 4], "one": [2, 6, 7], "choos": 2, "subset": [2, 5, 14, 41, 64], "your": [2, 4, 17, 46], "sinc": 2, "didn": 2, "t": [2, 4, 31, 36, 54, 57, 88, 134], "have": [2, 9], "access": [2, 4, 54], "all": [2, 3, 6, 7, 18, 27, 28, 29, 30, 31, 36, 38, 44, 45, 53, 88, 109, 115, 119, 120, 121, 123, 124, 125, 126, 127, 128, 130, 131, 132, 135, 139], "countri": 2, "customerid": 2, "invoiced": 2, "invoiceno": 2, "quantiti": [2, 94], "stockcod": 2, "unitpric": 2, "dtype": [2, 8, 9, 15, 19, 20, 22, 23, 26, 27, 28, 29, 30, 33, 34, 38, 41, 44, 45, 49, 53, 55, 56, 57, 58, 59, 65, 77, 78, 79, 80, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 107, 108, 111, 113, 114, 116, 118, 123, 124, 125, 126, 127, 128, 130, 131, 132, 136, 137, 143], "now": [2, 118], "run": 2, "also": [2, 54], "offer": 2, "info": [2, 14, 64, 137], "about": [2, 22, 36, 88], "underli": [2, 5, 60, 86, 94, 139], "It": [2, 17, 46], "contain": [2, 5, 15, 16, 40, 41, 55, 115, 135, 140], "inform": [2, 3, 10, 22, 57], "being": [2, 24], "pass": [2, 6, 7, 36, 88], "more": [2, 3, 6, 7, 10, 36, 57, 88, 134], "later": 2, "doubl": 2, "long": [2, 136], "understand": 2, "how": [2, 116, 118, 136], "attribut": [2, 139], "much": 2, "first": [2, 4, 17, 19, 20, 24, 56, 115, 118, 134], "last": [2, 46], "respect": 2, "unit": 2, "kingdom": 2, "17850": 2, "85123a": 2, "71053": 2, "count": [2, 6, 7, 10, 18, 22, 31, 35, 57, 116, 137], "14998": 2, "17419": 2, "21773": 2, "14999": 2, "22149": 2, "you": [2, 4, 37], "specifi": [2, 6, 7, 11, 14, 36, 40, 64, 88, 116], "order": [2, 17, 36, 46, 88, 115, 118], "2010": 2, "filter": [2, 17, 19, 20, 31, 36, 37, 38, 40, 46, 88, 129, 137, 143], "under": [2, 37], "hood": 2, "queri": [2, 9, 35, 36, 37, 42, 54, 88, 104, 137], "construct": [2, 5], "vector": 2, "directli": [2, 18, 140], "germani": 2, "1109": 2, "12662": 2, "22809": 2, "95": 2, "1110": 2, "84347": 2, "1111": 2, "84945": 2, "85": 2, "1112": 2, "22242": 2, "1113": 2, "22244": 2, "valu": [2, 3, 6, 7, 10, 11, 15, 16, 18, 19, 20, 22, 24, 26, 27, 28, 29, 30, 31, 38, 44, 45, 47, 49, 53, 54, 57, 70, 71, 72, 73, 74, 75, 76, 78, 83, 84, 85, 90, 106, 109, 111, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 136, 137], "isin": [2, 143], "state": [2, 118], "84406b": 2, "84029g": 2, "84029e": 2, "combin": [2, 6, 7, 88, 120, 121], "further": [2, 4], "90": 2, "exampl": [2, 4], "translat": 2, "begin": 2, "ask": 2, "some": 2, "question": 2, "answer": 2, "mani": [2, 116, 140], "differ": [2, 54, 115], "nuniqu": [2, 122, 137, 143], "what": [2, 4, 10, 23, 24, 57], "sum": [2, 6, 7, 137, 143], "product": [2, 31], "111960": 2, "me": 2, "mean": [2, 6, 7, 10, 16, 57, 137, 143], "min": [2, 6, 7, 10, 16, 57, 120, 121, 137, 143], "max": [2, 6, 7, 10, 16, 57, 120, 121, 137, 143], "qunat": 2, "unit_pric": 2, "agg": [2, 7, 16, 137], "61548": 2, "490000": [2, 58, 59, 114], "103233": 2, "2880": 2, "990000": [2, 58, 59, 114], "9360": 2, "give": [2, 22, 139], "describ": [2, 137, 143], "10729": 2, "15000": 2, "15590": 2, "776680": 2, "464000": 2, "1764": 2, "189592": 2, "930116": 2, "106214": 2, "12347": 2, "14222": 2, "689466": 2, "250000": 2, "15668": 2, "019608": 2, "510000": 2, "17218": 2, "806604": 2, "472000": 2, "212788": 2, "18239": 2, "histogram": [2, 18, 67], "bin": [2, 18, 67], "log": 2, "13748": 2, "22086": 2, "83": [2, 118], "15291": 2, "21733": 2, "96": [2, 10, 88], "14688": 2, "21212": 2, "102": [2, 16, 120, 121, 127], "85071b": 2, "176": [2, 56], "16029": 2, "85099c": 2, "14784": 2, "15061": 2, "22423": 2, "14785": 2, "22075": 2, "14788": 2, "17038": 2, "14974": 2, "14739": 2, "21704": 2, "72": 2, "14980": 2, "22178": 2, "258": 2, "string": [2, 6, 7, 36, 88, 113, 134], "concaten": 2, "kingdom85123a": 2, "kingdom71053": 2, "kingdom84406b": 2, "kingdom84029g": 2, "kingdom84029": 2, "14995": 2, "kingdom72349b": 2, "14996": 2, "kingdom72741": 2, "14997": 2, "kingdom22762": 2, "kingdom21773": 2, "kingdom22149": 2, "common": [3, 134], "integr": 3, "ml_commons_integr": [3, 134], "mlcommoncli": [3, 134], "get": [3, 137], "ml_client": 3, "provid": [3, 10, 57], "function": [3, 4, 6, 7, 17, 36, 46, 88, 120, 121, 139], "upload_model": [3, 142], "machin": 3, "learn": 3, "1st": 3, "argument": [3, 5, 6, 7, 10, 27, 28, 30, 33, 36, 39, 45, 57, 73, 74, 75, 76, 88, 109, 113, 116], "path": [3, 134], "zip": [3, 134], "expect": [3, 134], "2nd": 3, "config": 3, "json": [3, 134], "3rd": 3, "isverbos": [3, 134], "dure": 3, "execut": 3, "workplac": 3, "dhrubo": 3, "upload_cont": 3, "minilm": 3, "l6": 3, "v2": 3, "model_config": 3, "chunk": [3, 134], "sha1": 3, "9376c2ebd7c83f99ec2526323786c348d2382e6d86576f750c89ea544d6bbb14": 3, "meta": 3, "data": [3, 4, 5, 6, 7, 10, 12, 17, 18, 22, 23, 24, 34, 36, 46, 47, 48, 54, 57, 60, 61, 86, 88, 118, 120, 121, 136, 139], "successfulli": 3, "id": [3, 134], "bl4yviqberpycmutdhv9": 3, "statu": 3, "nov": 4, "2022": 4, "version": 4, "1": [4, 5, 6, 7, 11, 14, 15, 17, 18, 19, 20, 22, 23, 24, 27, 31, 33, 37, 38, 40, 44, 45, 49, 55, 56, 58, 59, 64, 65, 77, 78, 79, 80, 82, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 107, 108, 111, 114, 118, 123, 125, 126, 129, 130, 131, 135, 136], "0": [4, 5, 6, 7, 10, 11, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 28, 29, 30, 31, 33, 36, 38, 44, 49, 53, 55, 56, 58, 59, 64, 65, 67, 77, 78, 79, 80, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 107, 108, 111, 114, 118, 120, 121, 123, 125, 127, 129, 130, 131, 132, 135, 136], "link": [4, 39, 94], "sourc": [4, 5, 7, 9, 11, 14, 15, 16, 17, 19, 20, 22, 23, 24, 25, 31, 35, 36, 37, 38, 39, 40, 41, 46, 47, 48, 49, 50, 51, 54, 55, 57, 64, 66, 69, 70, 72, 73, 74, 75, 76, 78, 83, 85, 87, 88, 90, 94, 103, 106, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135], "repositori": 4, "issu": [4, 9], "idea": 4, "python": [4, 55], "client": [4, 5, 55, 118, 136], "explor": 4, "analyz": [4, 10, 36, 57, 88], "familiar": 4, "compat": [4, 41], "api": [4, 5, 21, 55, 68, 134], "where": [4, 5, 27, 28, 29, 30, 38, 44, 45, 53, 123, 124, 125, 126, 127, 128, 130, 131, 132], "possibl": [4, 5, 27, 28, 29, 30, 33, 38, 44, 45, 53, 123, 124, 125, 126, 127, 128, 130, 131, 132], "packag": 4, "exist": [4, 9, 11, 54, 83, 84, 118, 136], "structur": [4, 5, 135], "make": [4, 18], "easi": 4, "switch": 4, "between": [4, 38, 90, 115, 129], "scikit": 4, "power": [4, 89, 99], "equival": [4, 11], "In": [4, 48, 49, 51, 52, 54, 111, 113], "gener": [4, 10, 33, 40, 57, 116, 139], "resid": 4, "larg": [4, 135], "dataset": [4, 10, 37, 57], "store": [4, 5, 134], "pypi": 4, "relat": [4, 118], "work": [4, 6, 7, 36, 88], "updat": [4, 42], "pleas": 4, "don": [4, 31, 57], "until": 4, "notic": 4, "recommend": 4, "look": 4, "through": 4, "document": [4, 9, 40, 54], "re": [4, 14, 64, 115], "new": [4, 11, 31, 94, 118, 136], "refer": [4, 10, 55, 57], "seri": [4, 6, 7, 9, 10, 12, 14, 15, 18, 19, 20, 21, 23, 24, 26, 27, 28, 29, 30, 33, 34, 36, 43, 44, 45, 53, 118, 136, 139, 140], "util": [4, 50, 139], "output": [4, 10, 51, 57, 135, 139], "licens": 4, "contribut": 4, "code": [4, 22, 118], "conduct": 4, "option": [5, 6, 7, 14, 15, 16, 22, 23, 24, 27, 28, 29, 30, 36, 38, 40, 44, 45, 47, 53, 54, 55, 64, 72, 73, 74, 75, 76, 88, 103, 106, 109, 113, 117, 118, 120, 121, 135, 136], "str": [5, 6, 7, 14, 16, 23, 24, 35, 36, 39, 47, 54, 55, 64, 87, 88, 94, 113, 118, 119, 120, 121, 134, 136], "column": [5, 6, 7, 9, 10, 11, 12, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 53, 57, 61, 64, 88, 94, 104, 105, 116, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136, 137], "_query_compil": [5, 55], "querycompil": [5, 54, 55, 119], "two": 5, "dimension": [5, 42, 104], "mutabl": 5, "potenti": 5, "heterogen": 5, "tabular": [5, 51], "label": [5, 6, 7, 8, 11, 14, 64, 139], "ax": [5, 18, 67], "referenc": [5, 21, 68, 135, 136], "indic": [5, 70, 71, 83, 84, 118, 135], "The": [5, 8, 10, 12, 14, 17, 19, 20, 23, 24, 26, 34, 44, 46, 53, 54, 55, 57, 61, 64, 135], "rather": [5, 33, 116], "than": [5, 33, 54, 116], "index": [5, 6, 7, 8, 11, 14, 17, 19, 20, 22, 23, 24, 25, 34, 35, 39, 40, 46, 47, 48, 49, 51, 52, 55, 64, 94, 111, 113, 118, 135, 136, 139], "pattern": [5, 55], "wildcard": [5, 55], "g": [5, 6, 7, 9, 136], "A": [5, 35, 36, 39, 55, 115, 134, 136], "default": [5, 6, 7, 14, 15, 16, 17, 19, 20, 23, 24, 27, 28, 29, 30, 31, 36, 38, 40, 44, 45, 46, 53, 54, 64, 78, 88, 90, 116, 118, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136], "pandas_api_doc": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 57, 60, 61, 64, 67, 68, 70, 71, 72, 73, 74, 75, 76, 78, 82, 83, 84, 85, 90, 94, 105, 106, 109, 111, 113, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132], "configur": 5, "opensearch_test_cli": [5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 49, 53, 55, 56, 57, 58, 59, 61, 65, 67, 68, 72, 73, 74, 75, 76, 77, 78, 79, 80, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 106, 107, 108, 109, 111, 114, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136], "head": [5, 23, 24, 37, 49, 56, 58, 59, 65, 77, 79, 80, 88, 89, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 107, 108, 111, 114, 135, 137, 143], "x": [5, 11, 16, 17, 23, 24, 35, 36, 37, 46, 49, 88, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 135, 136], "todo": [5, 9, 10, 27, 28, 30, 33, 39, 45, 54, 57, 73, 74, 75, 76, 109, 116, 118], "index_field": 5, "01t00": 5, "772": 5, "100846": 5, "159": 5, "990962": 5, "800": 5, "217104": 5, "803": 5, "015200": 5, "func": [6, 7, 120, 121], "union": [6, 7, 14, 15, 16, 23, 36, 38, 64, 69, 88, 90, 118, 120, 121, 129, 136], "axi": [6, 7, 11, 14, 19, 20, 40, 64], "int": [6, 7, 14, 17, 19, 20, 22, 31, 32, 36, 38, 40, 43, 46, 64, 66, 72, 73, 74, 75, 76, 78, 82, 85, 88, 90, 103, 105, 106, 109, 110, 116, 117, 129, 136], "arg": [6, 7], "kwarg": [6, 7, 36, 88], "over": [6, 7, 19, 20, 23, 24, 36], "dict": [6, 7, 118, 136], "either": [6, 7, 14, 64], "klass": [6, 7], "appli": [6, 7, 14, 18, 36, 37, 64], "accept": [6, 7, 16, 120, 121], "mad": [6, 7, 137, 143], "median": [6, 7, 72, 123, 137, 143], "mode": [6, 7, 47, 137, 143], "quantil": [6, 7, 137, 143], "rank": [6, 7], "sem": [6, 7], "skew": [6, 7], "var": [6, 7, 106, 137, 143], "datatyp": [6, 7, 27, 28, 29, 30, 31, 38, 44, 45, 53, 118, 120, 121, 123, 124, 125, 126, 127, 128, 130, 131, 132], "nan": [6, 7, 10, 26, 27, 28, 29, 30, 31, 38, 44, 45, 48, 51, 53, 57, 113, 120, 121, 123, 124, 125, 126, 127, 128, 130, 131, 132], "nat": [6, 7, 26, 27, 28, 29, 30, 31, 38, 44, 45, 53, 120, 121, 123, 124, 125, 126, 127, 128, 130, 131, 132], "posit": [6, 7, 17, 46], "scalar": [6, 7], "singl": [6, 7, 9, 18, 36, 90], "sever": [6, 7], "astyp": [6, 7], "8204364": [6, 7, 109], "92616288": [6, 7], "assert": [8, 21, 68], "isinst": [8, 21, 68], "na": [9, 16, 19, 20, 70, 71, 83, 84], "cell": 9, "each": [9, 12, 24, 26, 27, 28, 29, 30, 33, 34, 38, 44, 45, 53, 61, 70, 71, 83, 84, 116, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132], "base": [9, 17, 41, 46, 55], "against": [9, 36], "ineffici": [9, 54], "altern": [9, 11], "approach": 9, "value_count": [9, 143], "howev": [9, 18], "thei": [9, 57, 115], "aggregat": [9, 33, 116], "text": [9, 33, 36, 88, 116, 136], "For": [9, 11, 18, 54, 94, 135], "multipl": [9, 31, 36, 78, 79, 80, 97, 98, 134], "tag": 9, "project": 9, "add": [9, 10, 39, 57, 91, 94, 143], "addit": [9, 10, 36, 39, 56, 57, 88, 91], "featur": 9, "summari": [9, 10, 22, 35, 57], "ecommerc": [9, 11, 22, 31, 33, 36, 37, 42, 56, 58, 59, 65, 77, 78, 79, 80, 88, 89, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 107, 108, 114], "customer_first_nam": [9, 11, 22, 33, 37, 56], "geoip": [9, 22, 31, 37], "city_nam": [9, 22, 31, 37], "4675": [9, 11, 22, 42, 104], "4094": [9, 22], "descript": [10, 57, 139], "statist": [10, 57], "summar": [10, 57], "central": [10, 57], "tendenc": [10, 57], "dispers": [10, 57], "shape": [10, 39, 57, 137, 143], "distribut": [10, 57], "exclud": [10, 19, 20, 41, 57], "both": [10, 57], "well": [10, 57], "mix": [10, 57], "depend": [10, 36, 57, 88], "below": [10, 57], "detail": [10, 22, 57, 113], "percentil": [10, 57], "386661": [10, 57], "743006": 10, "level": 11, "inplac": 11, "error": [11, 36, 88, 118], "rais": [11, 36, 88, 118, 136], "request": [11, 19, 20, 136], "remov": [11, 24, 27, 28, 29, 30, 38, 44, 45, 53, 118, 123, 124, 125, 126, 127, 128, 130, 131, 132, 136], "whether": [11, 70, 71, 83, 84], "multiindex": 11, "do": [11, 33, 54, 116, 136], "suppress": 11, "caller": 11, "email": 11, "user": [11, 33, 36, 39], "eddi": [11, 36, 56], "underwood": 11, "famili": 11, "zzz": 11, "mari": [11, 37, 56], "bailei": 11, "gwen": [11, 56], "butler": 11, "dian": [11, 56], "chandler": 11, "weber": 11, "4670": 11, "lambert": 11, "4671": [11, 36], "jim": [11, 36], "gilbert": 11, "4672": [11, 36], "yahya": [11, 36], "rivera": 11, "4673": 11, "hampton": 11, "4674": [11, 22, 36], "jackson": [11, 36], "hopkin": 11, "goodwin": 11, "oliv": [11, 36], "rio": 11, "via": [12, 18, 36, 61], "_os_dtype_to_pd_dtyp": [12, 61], "__doc__": [12, 61], "determin": [13, 62, 116], "item": [14, 15, 40, 64], "sequenc": [14, 36, 64], "regex": [14, 64], "accord": [14, 64], "routin": [14, 64], "its": [14, 64], "content": [14, 54, 64], "keep": [14, 64], "regular": [14, 24, 64], "express": [14, 19, 20, 39, 64], "search": [14, 35, 36, 64, 88, 116, 118], "By": [14, 24, 32, 36, 54, 64, 82, 135], "enforc": [14, 64], "mutual": [14, 64], "exclus": [14, 64], "kei": [15, 16, 137], "ani": [15, 24, 36, 48, 88, 90], "given": [15, 36, 38, 88, 90, 115, 129], "ex": 15, "found": 15, "dropna": [16, 18, 31, 118, 119, 136], "dataframegroupbi": [16, 137], "perform": 16, "group": [16, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132], "togeth": 16, "drop": [16, 137], "ed_flight": 16, "ae": [16, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132], "110": [16, 118, 120, 121, 127], "799911": [16, 120, 121, 127], "1126": [16, 120, 121, 124], "148682": [16, 120, 121, 124], "132": 16, "443756": 16, "817": [16, 129], "931030": 16, "125": [16, 120, 121, 127], "589394": [16, 120, 121, 127], "642822": [16, 120, 121, 124], "389603": 16, "1172": 16, "382568": 16, "AT": [16, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132], "1181": [16, 120, 121, 124], "835815": [16, 120, 121, 124], "tr": [16, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132], "307": 16, "915649": 16, "145966": [16, 120, 121, 127], "153069": 16, "1192": 16, "429932": 16, "za": [16, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132], "002663": [16, 120, 121, 127], "1196": [16, 120, 121, 124], "186157": [16, 120, 121, 124], "121": [16, 118], "280296": 16, "1175": 16, "709961": 16, "643": [16, 125], "956793": 16, "717949": 16, "388": 16, "828809": 16, "571429": 16, "673": 16, "551677": 16, "746154": 16, "682": 16, "197241": 16, "733333": 16, "647": 16, "158290": 16, "819936": 16, "598": 16, "063146": 16, "752014": 16, "579": [16, 129], "799066": 16, "767068": 16, "636": 16, "998605": 16, "738589": 16, "677": 16, "794078": 16, "928571": 16, "sort": [17, 23, 24, 46, 54, 115, 116], "quickli": [17, 46], "ha": [17, 21, 31, 33, 46, 54, 68, 78], "right": [17, 46, 56, 58, 59, 65, 77, 79, 80, 89, 107, 108, 114], "select": [17, 41, 46, 139], "sydnei": 17, "kingsford": 17, "smith": 17, "grid": [18, 67], "xlabels": [18, 67], "xrot": [18, 67], "ylabels": [18, 67], "yrot": [18, 67], "sharex": 18, "sharei": 18, "layout": 18, "kwd": [18, 67], "deriv": [18, 67, 118], "plot": [18, 67, 139], "_core": [18, 67], "hist_fram": [18, 67], "ideal": 18, "d": [18, 136], "weight": 18, "pre": 18, "col": 18, "select_dtyp": [18, 137], "occurr": [19, 20, 37, 116], "maximum": [19, 27, 73], "oml_df": [19, 20, 31, 38, 49, 52, 129, 135, 136], "1843": 19, "109": 19, "1988": 19, "minimum": [20, 30, 76], "5454": 20, "veri": [21, 54, 68], "limit": [21, 68], "compar": [21, 68], "verbos": [22, 118], "buf": [22, 48, 51, 113], "stringio": 22, "max_col": [22, 48, 51], "memory_usag": 22, "show_count": 22, "concis": 22, "full": [22, 36, 88], "copi": 22, "lot": [22, 54], "difficult": 22, "split": 22, "out": [22, 116], "appropri": 22, "sparsedatafram": 22, "incorrect": [22, 37], "iter": [23, 24, 118, 139], "tupl": [23, 24, 42, 104, 118, 136], "pair": [23, 24], "itertupl": [23, 137], "namedtupl": [23, 24], "element": [24, 43, 56, 58, 59, 65, 70, 71, 77, 79, 80, 83, 84, 89, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 105, 107, 108, 114], "possibli": 24, "follow": [24, 48, 51, 113], "iterrow": [24, 137], "69421554118": [24, 49], "041778346198": [24, 49], "With": 24, "custom": [24, 118], "yield": 24, "deviat": [26, 44, 72, 106, 123, 126, 130], "213": [26, 72], "35497": 26, "00000": 26, "473011": 26, "484": 26, "implement": [27, 28, 30, 33, 45, 48, 49, 51, 52, 73, 74, 75, 76, 109, 111, 113, 116], "remaind": [27, 28, 30, 33, 45, 73, 74, 75, 76, 109, 116], "preserv": [27, 28, 29, 30, 38, 44, 45, 53, 123, 124, 125, 126, 127, 128, 130, 131, 132], "73": [27, 79, 80], "254": [28, 118], "83598": 28, "564438232": 28, "363": 29, "624776611": 29, "362667": 29, "387": 29, "021": 30, "os_siz": [31, 78, 116], "calcul": [31, 38, 78, 90, 129], "consid": 31, "oml_ecommerc": [31, 78], "total_quant": [31, 56, 58, 59, 65, 77, 79, 80, 89, 94, 99, 104, 107, 108, 114], "customer_birth_d": [31, 33], "day_of_week": [31, 78], "taxful_total_pric": [31, 56, 58, 59, 65, 77, 79, 80, 88, 89, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 107, 108, 114], "york": 31, "thursdai": [31, 78], "98": [31, 56, 58, 59, 65, 77, 79, 80, 88, 89, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 107, 108, 114], "tax_amount": 31, "order_d": [31, 78], "2016": [31, 78], "definit": [32, 82], "cardin": [33, 137], "ignore_abov": 33, "256": [33, 130], "categori": [33, 36, 88], "currenc": [33, 36], "float": [34, 38, 40, 58, 59, 72, 73, 74, 75, 76, 90, 103, 106, 109, 114, 117, 129], "debug": 35, "compil": 35, "tail": [35, 137, 143], "12608": 35, "cyeg": 35, "120": 35, "12720": 35, "40": [35, 58, 59, 65, 114, 125, 126], "bhm": 35, "255": [35, 122, 128, 130], "12725": 35, "atl": 35, "12823": 35, "ngo": 35, "12907": 35, "lim": 35, "225": 35, "match_phras": [36, 88], "must_not_match": 36, "multi_match_typ": 36, "match_only_text_field": [36, 88], "fuzzi": [36, 88], "match": [36, 88, 136], "multi_match": 36, "within": [36, 37, 115], "otherwis": [36, 43, 62, 105], "specif": [36, 116], "instead": [36, 88], "take": [36, 88], "account": [36, 88, 118], "boolean": [36, 39, 88, 134], "NOT": 36, "prevent": [36, 88], "aren": [36, 88], "properli": [36, 88], "men": [36, 88], "cloth": [36, 88], "eur": 36, "accessori": [36, 88], "shoe": [36, 88], "abd": 36, "4663": 36, "samir": 36, "4667": 36, "sultan": 36, "women": [36, 88], "2310": 36, "dsl": 37, "dictionari": 37, "geo": 37, "distanc": 37, "_": 37, "point": 37, "locat": 37, "geo_dist": 37, "1km": 37, "dubai": 37, "rabbia": 37, "al": 37, "robbi": 37, "nest": 37, "correct": 37, "need": 37, "q": [38, 90, 129], "comput": [38, 90, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 139], "361": 38, "040768": 38, "296587520": 38, "637076736": 38, "658119680": 38, "expr": 39, "guid": 39, "pandas_user_guid": 39, "2730": 39, "frac": [40, 103], "random_st": [40, 103], "randomli": 40, "fraction": 40, "cannot": 40, "seed": 40, "random": 40, "datetim": 41, "repres": [42, 43, 104, 105], "len": [42, 104], "cach": 42, "407": 44, "93951": 44, "20436e": 45, "1678": 45, "37035": 45, "xi": 46, "xianyang": 46, "zurich": 46, "ukrainka": 46, "air": [46, 116], "ministro": 46, "pistarini": 46, "washington": 46, "dull": 46, "path_or_buf": 47, "sep": [47, 118], "na_rep": [47, 48, 51, 113], "float_format": [47, 48, 51, 113], "header": [47, 48, 51, 113, 118], "index_label": 47, "w": 47, "encod": [47, 118], "infer": [47, 118], "quot": [47, 118], "quotechar": [47, 118], "line_termin": 47, "chunksiz": [47, 118, 136], "tupleize_col": 47, "date_format": 47, "doublequot": [47, 118], "escapechar": [47, 118], "decim": [47, 48, 51, 118], "write": 47, "comma": [47, 118], "separ": [47, 118], "col_spac": [48, 51], "formatt": [48, 51], "sparsifi": [48, 51], "index_nam": [48, 51], "justifi": [48, 51], "max_row": [48, 51, 113], "show_dimens": [48, 51], "bold_row": 48, "escap": 48, "border": 48, "table_id": 48, "render_link": 48, "render": [48, 51, 113], "html": 48, "tabl": 48, "scenario": [48, 51, 113], "avoid": [48, 51, 113], "accident": [48, 51, 113], "dump": [48, 51, 113], "overridden": [48, 51, 113], "Not": [49, 52, 111], "represent": [49, 52, 111, 113], "involv": [49, 52, 111], "bewar": [49, 52, 111], "pd_df": [49, 135, 136], "f": [49, 111, 136], "ntype": [49, 111], "show_progress": [50, 112, 135], "convert": [50, 118, 135, 136], "line_width": 51, "consol": 51, "friendli": 51, "to_numpi": [52, 137, 143], "varianc": [53, 117, 132], "70964": [53, 117], "570234": 53, "111987": 53, "761279": 53, "76128": 53, "query_compil": [54, 119], "behaviour": 54, "slice": 54, "docvalu": 54, "so": [54, 55, 136, 137], "discourag": 54, "load": [54, 135], "case": 54, "advis": 54, "duplic": 54, "anoth": 54, "doc_valu": 54, "enabl": 54, "proxi": 55, "o": [55, 118, 136], "delet": [55, 118, 136], "chang": [55, 94], "after": [55, 136], "rebuilt": 55, "inconsist": 55, "occur": 55, "wise": [56, 58, 59, 65, 77, 79, 80, 89, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 107, 108, 114], "binari": [56, 58, 59, 65, 77, 79, 80, 89, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 107, 108, 114, 139], "199": [56, 58, 59, 65, 77, 79, 80, 89, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 107, 108, 114], "174": [56, 58, 59, 65, 77, 79, 80, 89, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 107, 108, 114], "80": [56, 58, 59, 65, 77, 79, 80, 89, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 107, 108, 114], "980000": [56, 77, 91, 100, 101, 107, 108], "200": [56, 88, 91], "979996": [56, 77, 91, 100, 101, 107, 108], "175": [56, 91], "81": [56, 91], "980003": [56, 77, 91, 100, 101, 107, 108], "201": 56, "82": 56, "customer_last_nam": 56, "eddieunderwood": 56, "marybailei": 56, "gwenbutl": 56, "dianechandl": 56, "eddieweb": 56, "divis": [58, 59, 65, 92, 93, 95, 102, 114], "truediv": [58, 59, 143], "99": [58, 59, 65, 114, 118], "989998": [58, 59, 114], "87": [58, 59, 65, 114], "489998": [58, 59, 114], "490002": [58, 59, 114], "draw": 67, "import": [67, 118], "alpha": 67, "densiti": 67, "other": [69, 88], "collect": 69, "booleanfilt": [69, 70, 71, 83, 84], "detect": [70, 71, 83, 84], "miss": [70, 71, 83, 84, 118, 136], "mask": [70, 71, 83, 84], "isna": [71, 143], "absolut": [72, 123, 126], "modulo": [77, 96], "959999": [79, 80], "107": [79, 80, 118], "399": [79, 80], "959991": [79, 80], "349": [79, 80], "161": [79, 80, 118], "960007": [79, 80], "mul": [80, 97, 98, 143], "notna": [84, 143], "uniqu": [85, 143], "queryfilt": 88, "221": [88, 123], "234": 88, "93": 88, "239": 88, "273": 88, "214": 88, "exponenti": [89, 99], "1367": 89, "520366": 89, "2913": 89, "840351": 89, "39991": 89, "998691": 89, "30617": 89, "998905": 89, "6557": 89, "760944": 89, "289159912": 90, "031627441": 90, "256136963": 90, "844534180": 90, "left": [91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102], "div": [92, 93, 102, 143], "027042": [92, 93, 102], "018525": [92, 93, 102], "005001": [92, 93, 102], "005715": [92, 93, 102], "012349": [92, 93, 102], "new_nam": 94, "symbol": 94, "instanc": 94, "could": 94, "floordiv": [95, 143], "500": [95, 96, 126], "mod": [96, 143], "260006": 96, "180004": 96, "040009": 96, "150": 96, "119980": 96, "369": [97, 98], "799995": [97, 98], "539": [97, 98], "1999": [97, 98], "799957": [97, 98], "1749": [97, 98], "809": [97, 98], "800034": [97, 98], "pow": [99, 143], "int_": 99, "subtract": [100, 101, 107, 143], "sub": [100, 101, 108, 143], "198": [100, 101], "173": [100, 101], "79": [100, 101], "197": [107, 108, 118], "172": [107, 108], "78": [107, 108, 118], "oml_seri": 111, "oml_": 111, "pd_": 111, "min_row": 113, "behavior": 115, "slightli": 115, "seen": 115, "bucket": 116, "automat": 116, "descend": 116, "should": [116, 140], "overal": 116, "os_api_doc": 116, "3331": [116, 118], "3274": 116, "3234": 116, "3220": 116, "etl": [118, 135, 136, 138], "filepath_or_buff": 118, "os_if_exist": [118, 136], "os_refresh": [118, 136], "os_type_overrid": [118, 136], "delimit": 118, "usecol": 118, "prefix": 118, "engin": 118, "true_valu": 118, "false_valu": 118, "skipinitialspac": 118, "skiprow": 118, "skipfoot": 118, "nrow": 118, "na_valu": 118, "keep_default_na": 118, "na_filt": 118, "skip_blank_lin": 118, "parse_d": 118, "infer_datetime_format": 118, "keep_date_col": 118, "date_pars": 118, "dayfirst": 118, "cache_d": 118, "thousand": 118, "b": [118, 136], "linetermin": 118, "comment": 118, "dialect": 118, "warn_bad_lin": 118, "error_bad_lin": 118, "on_bad_lin": 118, "delim_whitespac": 118, "low_memori": 118, "memory_map": 118, "float_precis": 118, "modifi": [118, 136], "append": [118, 136], "behav": [118, 136], "alreadi": [118, 136], "valueerror": [118, 136], "befor": [118, 136, 140], "insert": [118, 136], "caus": [118, 136], "bulk": [118, 136], "es_typ": 118, "overrid": [118, 136], "read_csv": 118, "churn": 118, "osclient": 118, "area": 118, "phone": 118, "plan": 118, "voic": 118, "mail": 118, "vmail": 118, "messag": [118, 134], "dai": 118, "minut": 118, "charg": 118, "ev": 118, "night": 118, "intl": 118, "servic": 118, "k": 118, "128": 118, "415": 118, "382": 118, "4657": 118, "ye": 118, "265": 118, "244": [118, 130], "91": 118, "oh": 118, "371": 118, "7191": 118, "123": 118, "195": [118, 123], "103": 118, "137": 118, "104": 118, "162": 118, "84": 118, "408": 118, "89": 118, "86": 118, "196": 118, "186": 118, "3328": 118, "192": [118, 123], "279": [118, 130], "3329": 118, "191": 118, "3330": 118, "510": 118, "184": 118, "139": 118, "3332": 118, "74": 118, "77": 118, "241": 118, "3333": 118, "valid": 118, "took": 118, "timed_out": 118, "_shard": 118, "success": 118, "skip": 118, "hit": 118, "eq": 118, "max_scor": 118, "_index": 118, "_score": 118, "retain": 118, "hold": 119, "au": [120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132], "294312": [120, 121, 127], "1197": [120, 121, 124], "632690": [120, 121, 124], "ca": [120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132], "557251": [120, 121, 127], "1198": [120, 121, 124], "852539": [120, 121, 124], "101": [120, 121, 127], "004005": [120, 121, 127], "742310": [120, 121, 124], "877190": [120, 121, 127], "621582": [120, 121, 124], "142": [120, 121, 127], "876465": [120, 121, 127], "855": [120, 121, 124], "935547": [120, 121, 124], "305": [122, 128], "377": [122, 128], "416": [122, 128], "944": [122, 128], "739": [122, 128], "1987": [122, 128], "283": [122, 128], "233": 123, "697174": 123, "189": 123, "250061": 123, "823669": 123, "202": 123, "539764": 123, "203": 123, "344696": 123, "206": 123, "431702": 123, "178": 123, "658447": 123, "863434": 123, "228": 123, "461365": 123, "162842": 123, "605": 125, "132970": 125, "152174": 125, "695652": 125, "891304443": 125, "674": 125, "827252": 125, "147541": 125, "744262": 125, "593442627": 125, "650530": 125, "175066": 125, "872679": 125, "469496094": 125, "669": 125, "558832": 125, "129808": 125, "843750": 125, "199519287": 125, "648": 125, "747109": 125, "134534": 125, "951271": 125, "165254150": 125, "662": 125, "994963": 125, "131258": 125, "832206": 125, "534506104": 125, "660": 125, "612988": 125, "149020": 125, "682353": 125, "447058838": 125, "485": 125, "253247": 125, "100000": 125, "900000": 125, "000000000": 125, "595": 125, "774391": 125, "125315": 125, "753900": 125, "456970215": 125, "053057": 125, "148410": 125, "766784": 125, "141342773": 125, "585": 126, "720490": 126, "678": 126, "447433": 126, "659": 126, "715592": 126, "689": 126, "241348": 126, "663": 126, "516057": 126, "670": 126, "714956": 126, "680": 126, "111084": 126, "441": 126, "681122": 126, "600": 126, "591525": 126, "633": 126, "935425": 126, "572": 129, "290384": 129, "578": 129, "140564": 129, "567": 129, "980560": 129, "582": 129, "618713": 129, "590": 129, "170986": 129, "811890": 129, "574": 129, "131340": 129, "852264": 129, "591": 129, "533699": 129, "877014": 129, "791": 129, "622625": 129, "793": 129, "362946": 129, "378523": 129, "766": 129, "855530": 129, "319": 129, "925979": 129, "325": 129, "704562": 129, "327": 129, "311007": 129, "336": 129, "839572": 129, "332": 129, "323011": 129, "314": 129, "472537": 129, "652659": 129, "298": 129, "483032": 129, "290205": 129, "024850": 129, "362137": 129, "568": 129, "323944": 129, "489746": 129, "523": 129, "890680": 129, "875500": 130, "367171": 130, "020634": 130, "903626": 130, "355811": 130, "949901": 130, "883342": 130, "381035": 130, "026411": 130, "585377": 130, "336902": 130, "961486": 130, "261": 130, "263054": 130, "341587": 130, "921980": 130, "259": 130, "696213": 130, "338140": 130, "964815": 130, "232": 130, "504297": 130, "357510": 130, "991340": 130, "267": 130, "827572": 130, "333333": 130, "191454": 130, "272": 130, "774819": 130, "331242": 130, "939469": 130, "505568": 130, "356766": 130, "948258": 130, "783612e": 131, "124": 131, "058223e": 131, "837": 131, "437872e": 131, "66": 131, "1083": 131, "785365e": 131, "1183": 131, "124173e": 131, "127": 131, "2786": 131, "899533e": 131, "97": 131, "2093": 131, "684563e": 131, "684": 131, "852532e": 131, "183804e": 131, "249": 131, "5472": 131, "819840e": 131, "783": 131, "75789": 132, "979090": 132, "130443": 132, "950549": 132, "59683": 132, "055316": 132, "125979": 132, "783429": 132, "65726": 132, "669676": 132, "144610": 132, "090013": 132, "65088": 132, "483446": 132, "113094": 132, "833562": 132, "68149": 132, "950516": 132, "116496": 132, "688139": 132, "67305": 132, "277617": 132, "114107": 132, "852666": 132, "53740": 132, "570338": 132, "127062": 132, "942132": 132, "61245": 132, "521047": 132, "094868": 132, "100420": 132, "74349": 132, "939410": 132, "109638": 132, "758700": 132, "62920": 132, "072901": 132, "126608": 132, "775609": 132, "self": 134, "model_path": 134, "model_config_path": 134, "plugin": 134, "metadata": 134, "break": 134, "filepath": 134, "doesn": 134, "anyth": 134, "signific": 135, "signfic": 135, "progress": 135, "stdout": 135, "10000": 135, "2020": 135, "572395": 135, "309031": 135, "pandas_to_opensearch": [135, 138], "os_verify_mapping_compat": 136, "thread_count": 136, "use_pandas_index_for_os_id": 136, "mainli": 136, "destin": 136, "refresh": 136, "field_nam": 136, "es_data_typ": 136, "verifi": 136, "schema": 136, "thread": 136, "destination_index": 136, "141": 136, "c": 136, "foo": 136, "20190102": 136, "h": 136, "overwrit": 136, "if_exist": 136, "sync": 136, "readabl": 136, "empti": [137, 143], "ndim": [137, 143], "sampl": [137, 143], "accur": 137, "approxim": 137, "hyperloglog": 137, "algorithm": 137, "exact": 137, "idxmax": 137, "idxmin": 137, "os_match": [137, 143], "os_queri": 137, "to_csv": 137, "to_html": 137, "to_str": [137, 143], "to_panda": [137, 143], "page": 139, "overview": 139, "public": 139, "expos": 139, "namespac": 139, "constructor": 139, "applic": 139, "groupbi": 139, "window": 139, "stat": 139, "reindex": 139, "manipul": 139, "serial": 139, "io": 139, "convers": 139, "flat": 139, "mlcommon": 139, "variant": 140, "thereof": 140, "those": 140, "most": 140, "multipli": 143, "divid": 143, "radd": 143, "rsub": 143, "rsubtract": 143, "rmul": 143, "rmultipli": 143, "rdiv": 143, "rdivid": 143, "rtruediv": 143, "rfloordiv": 143, "rmod": 143, "rpow": 143, "renam": 143, "isnul": 143, "notnul": 143}, "objects": {"": [[4, 0, 0, "-", "opensearch_py_ml"]], "opensearch_py_ml": [[5, 1, 1, "", "DataFrame"], [54, 1, 1, "", "Index"], [55, 1, 1, "", "Series"]], "opensearch_py_ml.DataFrame": [[6, 2, 1, "", "agg"], [7, 2, 1, "", "aggregate"], [8, 3, 1, "", "columns"], [9, 2, 1, "", "count"], [10, 2, 1, "", "describe"], [11, 2, 1, "", "drop"], [12, 3, 1, "", "dtypes"], [13, 3, 1, "", "empty"], [14, 2, 1, "", "filter"], [15, 2, 1, "", "get"], [16, 2, 1, "", "groupby"], [17, 2, 1, "", "head"], [18, 2, 1, "", "hist"], [19, 2, 1, "", "idxmax"], [20, 2, 1, "", "idxmin"], [21, 3, 1, "", "index"], [22, 2, 1, "", "info"], [23, 2, 1, "", "iterrows"], [24, 2, 1, "", "itertuples"], [25, 2, 1, "", "keys"], [26, 2, 1, "", "mad"], [27, 2, 1, "", "max"], [28, 2, 1, "", "mean"], [29, 2, 1, "", "median"], [30, 2, 1, "", "min"], [31, 2, 1, "", "mode"], [32, 3, 1, "", "ndim"], [33, 2, 1, "", "nunique"], [34, 3, 1, "", "os_dtypes"], [35, 2, 1, "", "os_info"], [36, 2, 1, "", "os_match"], [37, 2, 1, "", "os_query"], [38, 2, 1, "", "quantile"], [39, 2, 1, "", "query"], [40, 2, 1, "", "sample"], [41, 2, 1, "", "select_dtypes"], [42, 3, 1, "", "shape"], [43, 3, 1, "", "size"], [44, 2, 1, "", "std"], [45, 2, 1, "", "sum"], [46, 2, 1, "", "tail"], [47, 2, 1, "", "to_csv"], [48, 2, 1, "", "to_html"], [49, 2, 1, "", "to_numpy"], [50, 2, 1, "", "to_pandas"], [51, 2, 1, "", "to_string"], [52, 3, 1, "", "values"], [53, 2, 1, "", "var"]], "opensearch_py_ml.Series": [[56, 2, 1, "", "add"], [57, 2, 1, "", "describe"], [58, 2, 1, "", "div"], [59, 2, 1, "", "divide"], [60, 3, 1, "", "dtype"], [61, 3, 1, "", "dtypes"], [62, 3, 1, "", "empty"], [64, 2, 1, "", "filter"], [65, 2, 1, "", "floordiv"], [66, 2, 1, "", "head"], [67, 2, 1, "", "hist"], [68, 3, 1, "", "index"], [69, 2, 1, "", "isin"], [70, 2, 1, "", "isna"], [71, 2, 1, "", "isnull"], [72, 2, 1, "", "mad"], [73, 2, 1, "", "max"], [74, 2, 1, "", "mean"], [75, 2, 1, "", "median"], [76, 2, 1, "", "min"], [77, 2, 1, "", "mod"], [78, 2, 1, "", "mode"], [79, 2, 1, "", "mul"], [80, 2, 1, "", "multiply"], [81, 3, 1, "", "name"], [82, 3, 1, "", "ndim"], [83, 2, 1, "", "notna"], [84, 2, 1, "", "notnull"], [85, 2, 1, "", "nunique"], [86, 3, 1, "", "os_dtype"], [87, 2, 1, "", "os_info"], [88, 2, 1, "", "os_match"], [89, 2, 1, "", "pow"], [90, 2, 1, "", "quantile"], [91, 2, 1, "", "radd"], [92, 2, 1, "", "rdiv"], [93, 2, 1, "", "rdivide"], [94, 2, 1, "", "rename"], [95, 2, 1, "", "rfloordiv"], [96, 2, 1, "", "rmod"], [97, 2, 1, "", "rmul"], [98, 2, 1, "", "rmultiply"], [99, 2, 1, "", "rpow"], [100, 2, 1, "", "rsub"], [101, 2, 1, "", "rsubtract"], [102, 2, 1, "", "rtruediv"], [103, 2, 1, "", "sample"], [104, 3, 1, "", "shape"], [105, 3, 1, "", "size"], [106, 2, 1, "", "std"], [107, 2, 1, "", "sub"], [108, 2, 1, "", "subtract"], [109, 2, 1, "", "sum"], [110, 2, 1, "", "tail"], [111, 2, 1, "", "to_numpy"], [112, 2, 1, "", "to_pandas"], [113, 2, 1, "", "to_string"], [114, 2, 1, "", "truediv"], [115, 2, 1, "", "unique"], [116, 2, 1, "", "value_counts"], [117, 2, 1, "", "var"]], "opensearch_py_ml.etl": [[118, 4, 1, "", "csv_to_opensearch"], [135, 2, 1, "", "opensearch_to_pandas"], [136, 2, 1, "", "pandas_to_opensearch"]], "opensearch_py_ml.groupby": [[119, 1, 1, "", "DataFrameGroupBy"]], "opensearch_py_ml.groupby.DataFrameGroupBy": [[120, 2, 1, "", "agg"], [121, 2, 1, "", "aggregate"], [122, 2, 1, "", "count"], [123, 2, 1, "", "mad"], [124, 2, 1, "", "max"], [125, 2, 1, "", "mean"], [126, 2, 1, "", "median"], [127, 2, 1, "", "min"], [128, 2, 1, "", "nunique"], [129, 2, 1, "", "quantile"], [130, 2, 1, "", "std"], [131, 2, 1, "", "sum"], [132, 2, 1, "", "var"]], "opensearch_py_ml.ml_commons_integration.MLCommonClient": [[134, 4, 1, "", "upload_model"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"]}, "titleterms": {"demo": [0, 3], "notebook": [0, 3], "datafram": [0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 137], "step": [0, 2, 3], "0": [0, 2, 3], "import": [0, 2, 3], "1": [0, 2, 3], "setup": [0, 2, 3], "client": [0, 2, 3], "compar": 0, "similar": 0, "differ": 0, "between": 0, "panda": [0, 138], "v": 0, "opensearch_py_ml": [0, 54], "attribut": [0, 137, 143], "underli": [0, 137, 143], "data": [0, 2, 137, 143], "column": [0, 2, 8], "dtype": [0, 12, 60, 61], "select_dtyp": [0, 41], "empti": [0, 13, 62], "shape": [0, 42, 104], "index": [0, 2, 21, 54, 68, 137, 140, 143], "valu": [0, 52], "iter": [0, 137, 143], "head": [0, 2, 17, 66], "tail": [0, 2, 46, 110], "kei": [0, 25], "get": [0, 2, 4, 15], "queri": [0, 39], "boolean": [0, 2], "function": [0, 137, 138, 143], "applic": [0, 137], "groupbi": [0, 16, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 137], "window": [0, 137], "agg": [0, 6, 120], "comput": [0, 137, 143], "descript": [0, 2, 137, 143], "stat": [0, 137, 143], "count": [0, 9, 122], "describ": [0, 10, 57], "info": [0, 22], "max": [0, 27, 73, 124], "min": [0, 30, 76, 127], "mean": [0, 28, 74, 125], "sum": [0, 45, 109, 131], "nuniqu": [0, 33, 85, 128], "drop": [0, 11], "plot": [0, 137, 143], "opensearch": [0, 4, 137, 138, 143], "util": [0, 138], "exampl": [1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 49, 53, 55, 56, 57, 58, 59, 61, 65, 67, 68, 72, 73, 74, 75, 76, 77, 78, 79, 80, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 106, 107, 108, 109, 111, 114, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136], "onlin": 2, "retail": 2, "analysi": 2, "start": [2, 4], "select": [2, 137, 143], "aggreg": [2, 7, 121], "statist": 2, "arithmet": 2, "oper": [2, 143], "upload": [3, 142], "model": [3, 142], "2": 3, "py": 4, "ml": 4, "machin": 4, "learn": 4, "back": 4, "warn": 4, "paramet": [5, 6, 7, 11, 14, 15, 16, 17, 19, 20, 23, 24, 27, 28, 29, 30, 31, 36, 37, 38, 39, 40, 44, 45, 46, 53, 55, 56, 58, 59, 64, 65, 77, 78, 79, 80, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 107, 108, 114, 116, 118, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136], "see": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 38, 39, 40, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 57, 60, 61, 64, 68, 70, 71, 72, 73, 74, 75, 76, 78, 82, 83, 84, 85, 90, 94, 105, 106, 109, 111, 113, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136], "also": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 38, 39, 40, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 57, 60, 61, 64, 68, 70, 71, 72, 73, 74, 75, 76, 78, 82, 83, 84, 85, 90, 94, 105, 106, 109, 111, 113, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136], "return": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 50, 53, 56, 57, 58, 59, 61, 64, 65, 68, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 114, 115, 116, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136], "filter": [14, 64], "note": [14, 18, 22, 42, 55, 64, 67, 104, 118], "hist": [18, 67], "idxmax": 19, "idxmin": 20, "iterrow": 23, "yield": 23, "itertupl": 24, "mad": [26, 72, 123], "median": [29, 75, 126], "mode": [31, 78], "ndim": [32, 82], "os_dtyp": [34, 86], "os_info": [35, 87], "os_match": [36, 88], "os_queri": 37, "quantil": [38, 90, 129], "sampl": [40, 103], "size": [43, 105], "std": [44, 106, 130], "to_csv": 47, "to_html": 48, "to_numpi": [49, 111], "to_panda": [50, 112], "to_str": [51, 113], "var": [53, 117, 132], "seri": [55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 143], "add": 56, "div": 58, "divid": 59, "es_dtyp": 63, "floordiv": 65, "isin": 69, "isna": 70, "isnul": 71, "mod": 77, "mul": 79, "multipli": 80, "name": 81, "notna": 83, "notnul": 84, "pow": 89, "radd": 91, "rdiv": 92, "rdivid": 93, "renam": 94, "rfloordiv": 95, "rmod": 96, "rmul": 97, "rmultipli": 98, "rpow": 99, "rsub": 100, "rsubtract": 101, "rtruediv": 102, "sub": 107, "subtract": 108, "truediv": 114, "uniqu": 115, "value_count": 116, "csv_to_opensearch": 118, "other": 118, "dataframegroupbi": [119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132], "upload_model": 134, "opensearch_to_panda": 135, "pandas_to_opensearch": 136, "constructor": [137, 140, 143], "reindex": [137, 143], "label": [137, 143], "manipul": [137, 143], "serial": [137, 143], "io": [137, 143], "convers": [137, 143], "gener": 138, "api": 139, "refer": 139, "input": 141, "output": 141, "flat": 141, "file": 141, "mlcommon": 142, "support": 142, "binari": 143}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "nbsphinx": 4, "sphinx.ext.todo": 2, "sphinx": 57}, "alltitles": {"Demo Notebook for Dataframe": [[0, "Demo-Notebook-for-Dataframe"]], "Step 0: Imports": [[0, "Step-0:-Imports"], [2, "Step-0:-Imports"], [3, "Step-0:-Imports"]], "Step 1: Setup clients": [[0, "Step-1:-Setup-clients"], [2, "Step-1:-Setup-clients"], [3, "Step-1:-Setup-clients"]], "Comparing similarities and differences between panda dataframe vs opensearch_py_ml dataframe": [[0, "Comparing-similarities-and-differences-between-panda-dataframe-vs-opensearch_py_ml-dataframe"]], "Attributes and underlying data": [[0, "Attributes-and-underlying-data"]], "DataFrame.columns": [[0, "DataFrame.columns"], [8, "dataframe-columns"]], "DataFrame.dtypes": [[0, "DataFrame.dtypes"], [12, "dataframe-dtypes"]], "DataFrame.select_dtypes": [[0, "DataFrame.select_dtypes"], [41, "dataframe-select-dtypes"]], "DataFrame.empty": [[0, "DataFrame.empty"], [13, "dataframe-empty"]], "DataFrame.shape": [[0, "DataFrame.shape"], [42, "dataframe-shape"]], "DataFrame.index": [[0, "DataFrame.index"], [21, "dataframe-index"]], "DataFrame.values": [[0, "DataFrame.values"], [52, "dataframe-values"]], "Indexing, iteration": [[0, "Indexing,-iteration"]], "DataFrame.head": [[0, "DataFrame.head"], [17, "dataframe-head"]], "DataFrame.tail": [[0, "DataFrame.tail"], [46, "dataframe-tail"]], "DataFrame.keys": [[0, "DataFrame.keys"], [25, "dataframe-keys"]], "DataFrame.get": [[0, "DataFrame.get"], [15, "dataframe-get"]], "DataFrame.query": [[0, "DataFrame.query"], [39, "dataframe-query"]], "Boolean indexing query": [[0, "Boolean-indexing-query"]], "Function application, GroupBy & window": [[0, "Function-application,-GroupBy-&-window"]], "DataFrame.aggs": [[0, "DataFrame.aggs"]], "Computations / descriptive stats": [[0, "Computations-/-descriptive-stats"]], "DataFrame.count": [[0, "DataFrame.count"], [9, "dataframe-count"]], "DataFrame.describe": [[0, "DataFrame.describe"], [10, "dataframe-describe"]], "DataFrame.info": [[0, "DataFrame.info"], [22, "dataframe-info"]], "DataFrame.max, DataFrame.min, DataFrame.mean, DataFrame.sum": [[0, "DataFrame.max,-DataFrame.min,-DataFrame.mean,-DataFrame.sum"]], "max": [[0, "max"]], "min": [[0, "min"]], "mean": [[0, "mean"]], "sum": [[0, "sum"]], "DataFrame.nunique": [[0, "DataFrame.nunique"], [33, "dataframe-nunique"]], "DataFrame.drop": [[0, "DataFrame.drop"], [11, "dataframe-drop"]], "Plotting": [[0, "Plotting"], [137, "plotting"], [143, "plotting"]], "Opensearch utilities": [[0, "Opensearch-utilities"]], "Examples": [[1, "examples"], [5, "examples"], [6, "examples"], [7, "examples"], [8, "examples"], [9, "examples"], [10, "examples"], [11, "examples"], [12, "examples"], [13, "examples"], [15, "examples"], [16, "examples"], [17, "examples"], [18, "examples"], [19, "examples"], [20, "examples"], [21, "examples"], [22, "examples"], [23, "examples"], [24, "examples"], [26, "examples"], [27, "examples"], [28, "examples"], [29, "examples"], [30, "examples"], [31, "examples"], [33, "examples"], [34, "examples"], [35, "examples"], [36, "examples"], [37, "examples"], [38, "examples"], [39, "examples"], [41, "examples"], [42, "examples"], [44, "examples"], [45, "examples"], [46, "examples"], [49, "examples"], [53, "examples"], [55, "examples"], [56, "examples"], [57, "examples"], [58, "examples"], [59, "examples"], [61, "examples"], [65, "examples"], [67, "examples"], [68, "examples"], [72, "examples"], [73, "examples"], [74, "examples"], [75, "examples"], [76, "examples"], [77, "examples"], [78, "examples"], [79, "examples"], [80, "examples"], [85, "examples"], [88, "examples"], [89, "examples"], [90, "examples"], [91, "examples"], [92, "examples"], [93, "examples"], [94, "examples"], [95, "examples"], [96, "examples"], [97, "examples"], [98, "examples"], [99, "examples"], [100, "examples"], [101, "examples"], [102, "examples"], [104, "examples"], [106, "examples"], [107, "examples"], [108, "examples"], [109, "examples"], [111, "examples"], [114, "examples"], [116, "examples"], [117, "examples"], [118, "examples"], [120, "examples"], [121, "examples"], [122, "examples"], [123, "examples"], [124, "examples"], [125, "examples"], [126, "examples"], [127, "examples"], [128, "examples"], [129, "examples"], [130, "examples"], [131, "examples"], [132, "examples"], [135, "examples"], [136, "examples"]], "Online Retail analysis": [[2, "Online-Retail-analysis"]], "Getting Started": [[2, "Getting-Started"], [4, "getting-started"]], "Selecting and Indexing Data": [[2, "Selecting-and-Indexing-Data"]], "head and tail": [[2, "head-and-tail"]], "Selecting columns": [[2, "Selecting-columns"]], "Boolean Indexing": [[2, "Boolean-Indexing"]], "Aggregation and Descriptive Statistics": [[2, "Aggregation-and-Descriptive-Statistics"]], "Arithmetic Operations": [[2, "Arithmetic-Operations"]], "Demo Notebook for Upload Models": [[3, "Demo-Notebook-for-Upload-Models"]], "Step 2: Upload Models": [[3, "Step-2:-Upload-Models"]], "Opensearch-py-ml: DataFrames and Machine Learning backed by Opensearch": [[4, "opensearch-py-ml-dataframes-and-machine-learning-backed-by-opensearch"]], "WARNING": [[4, "warning"]], "DataFrame": [[5, "dataframe"], [137, "dataframe"]], "Parameters": [[5, "parameters"], [6, "parameters"], [7, "parameters"], [11, "parameters"], [14, "parameters"], [15, "parameters"], [16, "parameters"], [17, "parameters"], [19, "parameters"], [20, "parameters"], [23, "parameters"], [24, "parameters"], [27, "parameters"], [28, "parameters"], [29, "parameters"], [30, "parameters"], [31, "parameters"], [36, "parameters"], [37, "parameters"], [38, "parameters"], [39, "parameters"], [40, "parameters"], [44, "parameters"], [45, "parameters"], [46, "parameters"], [53, "parameters"], [55, "parameters"], [56, "parameters"], [58, "parameters"], [59, "parameters"], [64, "parameters"], [65, "parameters"], [77, "parameters"], [78, "parameters"], [79, "parameters"], [80, "parameters"], [88, "parameters"], [89, "parameters"], [90, "parameters"], [91, "parameters"], [92, "parameters"], [93, "parameters"], [94, "parameters"], [95, "parameters"], [96, "parameters"], [97, "parameters"], [98, "parameters"], [99, "parameters"], [100, "parameters"], [101, "parameters"], [102, "parameters"], [107, "parameters"], [108, "parameters"], [114, "parameters"], [116, "parameters"], [118, "parameters"], [120, "parameters"], [121, "parameters"], [123, "parameters"], [124, "parameters"], [125, "parameters"], [126, "parameters"], [127, "parameters"], [128, "parameters"], [129, "parameters"], [130, "parameters"], [131, "parameters"], [132, "parameters"], [134, "parameters"], [135, "parameters"], [136, "parameters"]], "See Also": [[5, "see-also"], [6, "see-also"], [7, "see-also"], [8, "see-also"], [9, "see-also"], [10, "see-also"], [11, "see-also"], [12, "see-also"], [13, "see-also"], [14, "see-also"], [15, "see-also"], [16, "see-also"], [17, "see-also"], [19, "see-also"], [20, "see-also"], [21, "see-also"], [23, "see-also"], [24, "see-also"], [26, "see-also"], [27, "see-also"], [28, "see-also"], [29, "see-also"], [30, "see-also"], [31, "see-also"], [32, "see-also"], [33, "see-also"], [38, "see-also"], [39, "see-also"], [40, "see-also"], [43, "see-also"], [44, "see-also"], [45, "see-also"], [46, "see-also"], [47, "see-also"], [48, "see-also"], [49, "see-also"], [51, "see-also"], [52, "see-also"], [53, "see-also"], [55, "see-also"], [57, "see-also"], [60, "see-also"], [61, "see-also"], [64, "see-also"], [68, "see-also"], [70, "see-also"], [71, "see-also"], [72, "see-also"], [73, "see-also"], [74, "see-also"], [75, "see-also"], [76, "see-also"], [78, "see-also"], [82, "see-also"], [83, "see-also"], [84, "see-also"], [85, "see-also"], [90, "see-also"], [94, "see-also"], [105, "see-also"], [106, "see-also"], [109, "see-also"], [111, "see-also"], [113, "see-also"], [115, "see-also"], [116, "see-also"], [117, "see-also"], [118, "see-also"], [120, "see-also"], [121, "see-also"], [122, "see-also"], [123, "see-also"], [124, "see-also"], [125, "see-also"], [126, "see-also"], [127, "see-also"], [128, "see-also"], [129, "see-also"], [130, "see-also"], [131, "see-also"], [132, "see-also"], [135, "see-also"], [136, "see-also"]], "DataFrame.agg": [[6, "dataframe-agg"]], "Returns": [[6, "returns"], [7, "returns"], [8, "returns"], [9, "returns"], [10, "returns"], [11, "returns"], [12, "returns"], [13, "returns"], [14, "returns"], [15, "returns"], [16, "returns"], [17, "returns"], [19, "returns"], [20, "returns"], [21, "returns"], [24, "returns"], [25, "returns"], [26, "returns"], [27, "returns"], [28, "returns"], [29, "returns"], [30, "returns"], [32, "returns"], [33, "returns"], [34, "returns"], [35, "returns"], [36, "returns"], [37, "returns"], [38, "returns"], [39, "returns"], [40, "returns"], [41, "returns"], [42, "returns"], [43, "returns"], [44, "returns"], [45, "returns"], [46, "returns"], [50, "returns"], [53, "returns"], [56, "returns"], [57, "returns"], [58, "returns"], [59, "returns"], [61, "returns"], [64, "returns"], [65, "returns"], [68, "returns"], [70, "returns"], [71, "returns"], [72, "returns"], [73, "returns"], [74, "returns"], [75, "returns"], [76, "returns"], [77, "returns"], [79, "returns"], [80, "returns"], [82, "returns"], [83, "returns"], [84, "returns"], [85, "returns"], [88, "returns"], [89, "returns"], [90, "returns"], [91, "returns"], [92, "returns"], [93, "returns"], [94, "returns"], [95, "returns"], [96, "returns"], [97, "returns"], [98, "returns"], [99, "returns"], [100, "returns"], [101, "returns"], [102, "returns"], [104, "returns"], [105, "returns"], [106, "returns"], [107, "returns"], [108, "returns"], [109, "returns"], [114, "returns"], [115, "returns"], [116, "returns"], [117, "returns"], [120, "returns"], [121, "returns"], [122, "returns"], [123, "returns"], [124, "returns"], [125, "returns"], [126, "returns"], [127, "returns"], [128, "returns"], [129, "returns"], [130, "returns"], [131, "returns"], [132, "returns"], [134, "returns"], [135, "returns"], [136, "returns"]], "DataFrame.aggregate": [[7, "dataframe-aggregate"]], "DataFrame.filter": [[14, "dataframe-filter"]], "Notes": [[14, "notes"], [18, "notes"], [22, "notes"], [42, "notes"], [55, "notes"], [64, "notes"], [67, "notes"], [104, "notes"], [118, "notes"]], "DataFrame.groupby": [[16, "dataframe-groupby"]], "DataFrame.hist": [[18, "dataframe-hist"]], "DataFrame.idxmax": [[19, "dataframe-idxmax"]], "DataFrame.idxmin": [[20, "dataframe-idxmin"]], "DataFrame.iterrows": [[23, "dataframe-iterrows"]], "Yields": [[23, "yields"]], "DataFrame.itertuples": [[24, "dataframe-itertuples"]], "DataFrame.mad": [[26, "dataframe-mad"]], "DataFrame.max": [[27, "dataframe-max"]], "DataFrame.mean": [[28, "dataframe-mean"]], "DataFrame.median": [[29, "dataframe-median"]], "DataFrame.min": [[30, "dataframe-min"]], "DataFrame.mode": [[31, "dataframe-mode"]], "DataFrame.ndim": [[32, "dataframe-ndim"]], "DataFrame.os_dtypes": [[34, "dataframe-os-dtypes"]], "DataFrame.os_info": [[35, "dataframe-os-info"]], "DataFrame.os_match": [[36, "dataframe-os-match"]], "DataFrame.os_query": [[37, "dataframe-os-query"]], "DataFrame.quantile": [[38, "dataframe-quantile"]], "DataFrame.sample": [[40, "dataframe-sample"]], "DataFrame.size": [[43, "dataframe-size"]], "DataFrame.std": [[44, "dataframe-std"]], "DataFrame.sum": [[45, "dataframe-sum"]], "DataFrame.to_csv": [[47, "dataframe-to-csv"]], "DataFrame.to_html": [[48, "dataframe-to-html"]], "DataFrame.to_numpy": [[49, "dataframe-to-numpy"]], "DataFrame.to_pandas": [[50, "dataframe-to-pandas"]], "DataFrame.to_string": [[51, "dataframe-to-string"]], "DataFrame.var": [[53, "dataframe-var"]], "opensearch_py_ml.Index": [[54, "opensearch-py-ml-index"]], "Series": [[55, "series"], [143, "series"]], "Series.add": [[56, "series-add"]], "Series.describe": [[57, "series-describe"]], "Series.div": [[58, "series-div"]], "Series.divide": [[59, "series-divide"]], "Series.dtype": [[60, "series-dtype"]], "Series.dtypes": [[61, "series-dtypes"]], "Series.empty": [[62, "series-empty"]], "Series.es_dtypes": [[63, "series-es-dtypes"]], "Series.filter": [[64, "series-filter"]], "Series.floordiv": [[65, "series-floordiv"]], "Series.head": [[66, "series-head"]], "Series.hist": [[67, "series-hist"]], "Series.index": [[68, "series-index"]], "Series.isin": [[69, "series-isin"]], "Series.isna": [[70, "series-isna"]], "Series.isnull": [[71, "series-isnull"]], "Series.mad": [[72, "series-mad"]], "Series.max": [[73, "series-max"]], "Series.mean": [[74, "series-mean"]], "Series.median": [[75, "series-median"]], "Series.min": [[76, "series-min"]], "Series.mod": [[77, "series-mod"]], "Series.mode": [[78, "series-mode"]], "Series.mul": [[79, "series-mul"]], "Series.multiply": [[80, "series-multiply"]], "Series.name": [[81, "series-name"]], "Series.ndim": [[82, "series-ndim"]], "Series.notna": [[83, "series-notna"]], "Series.notnull": [[84, "series-notnull"]], "Series.nunique": [[85, "series-nunique"]], "Series.os_dtype": [[86, "series-os-dtype"]], "Series.os_info": [[87, "series-os-info"]], "Series.os_match": [[88, "series-os-match"]], "Series.pow": [[89, "series-pow"]], "Series.quantile": [[90, "series-quantile"]], "Series.radd": [[91, "series-radd"]], "Series.rdiv": [[92, "series-rdiv"]], "Series.rdivide": [[93, "series-rdivide"]], "Series.rename": [[94, "series-rename"]], "Series.rfloordiv": [[95, "series-rfloordiv"]], "Series.rmod": [[96, "series-rmod"]], "Series.rmul": [[97, "series-rmul"]], "Series.rmultiply": [[98, "series-rmultiply"]], "Series.rpow": [[99, "series-rpow"]], "Series.rsub": [[100, "series-rsub"]], "Series.rsubtract": [[101, "series-rsubtract"]], "Series.rtruediv": [[102, "series-rtruediv"]], "Series.sample": [[103, "series-sample"]], "Series.shape": [[104, "series-shape"]], "Series.size": [[105, "series-size"]], "Series.std": [[106, "series-std"]], "Series.sub": [[107, "series-sub"]], "Series.subtract": [[108, "series-subtract"]], "Series.sum": [[109, "series-sum"]], "Series.tail": [[110, "series-tail"]], "Series.to_numpy": [[111, "series-to-numpy"]], "Series.to_pandas": [[112, "series-to-pandas"]], "Series.to_string": [[113, "series-to-string"]], "Series.truediv": [[114, "series-truediv"]], "Series.unique": [[115, "series-unique"]], "Series.value_counts": [[116, "series-value-counts"]], "Series.var": [[117, "series-var"]], "csv_to_opensearch": [[118, "csv-to-opensearch"]], "Other Parameters": [[118, "other-parameters"]], "groupby.DataFrameGroupBy": [[119, "groupby-dataframegroupby"]], "groupby.DataFrameGroupBy.agg": [[120, "groupby-dataframegroupby-agg"]], "groupby.DataFrameGroupBy.aggregate": [[121, "groupby-dataframegroupby-aggregate"]], "groupby.DataFrameGroupBy.count": [[122, "groupby-dataframegroupby-count"]], "groupby.DataFrameGroupBy.mad": [[123, "groupby-dataframegroupby-mad"]], "groupby.DataFrameGroupBy.max": [[124, "groupby-dataframegroupby-max"]], "groupby.DataFrameGroupBy.mean": [[125, "groupby-dataframegroupby-mean"]], "groupby.DataFrameGroupBy.median": [[126, "groupby-dataframegroupby-median"]], "groupby.DataFrameGroupBy.min": [[127, "groupby-dataframegroupby-min"]], "groupby.DataFrameGroupBy.nunique": [[128, "groupby-dataframegroupby-nunique"]], "groupby.DataFrameGroupBy.quantile": [[129, "groupby-dataframegroupby-quantile"]], "groupby.DataFrameGroupBy.std": [[130, "groupby-dataframegroupby-std"]], "groupby.DataFrameGroupBy.sum": [[131, "groupby-dataframegroupby-sum"]], "groupby.DataFrameGroupBy.var": [[132, "groupby-dataframegroupby-var"]], "groupby.GroupBy": [[133, "groupby-groupby"]], "upload_model": [[134, "upload-model"]], "opensearch_to_pandas": [[135, "opensearch-to-pandas"]], "pandas_to_opensearch": [[136, "pandas-to-opensearch"]], "Constructor": [[137, "constructor"], [140, "constructor"], [143, "constructor"]], "Attributes and Underlying Data": [[137, "attributes-and-underlying-data"], [143, "attributes-and-underlying-data"]], "Indexing, Iteration": [[137, "indexing-iteration"], [143, "indexing-iteration"]], "Function Application, GroupBy & Window": [[137, "function-application-groupby-window"]], "Computations / Descriptive Stats": [[137, "computations-descriptive-stats"], [143, "computations-descriptive-stats"]], "Reindexing / Selection / Label Manipulation": [[137, "reindexing-selection-label-manipulation"], [143, "reindexing-selection-label-manipulation"]], "Opensearch Functions": [[137, "opensearch-functions"], [143, "opensearch-functions"]], "Serialization / IO / Conversion": [[137, "serialization-io-conversion"], [143, "serialization-io-conversion"]], "General Utility Functions": [[138, "general-utility-functions"]], "Pandas and Opensearch": [[138, "pandas-and-opensearch"]], "API Reference": [[139, "api-reference"]], "Index": [[140, "index"]], "Input/Output": [[141, "input-output"]], "Flat File": [[141, "flat-file"]], "MLCommons Support": [[142, "mlcommons-support"]], "Upload Model": [[142, "upload-model"]], "Binary Operator Functions": [[143, "binary-operator-functions"]]}, "indexentries": {"module": [[4, "module-opensearch_py_ml"]], "opensearch_py_ml": [[4, "module-opensearch_py_ml"]], "dataframe (class in opensearch_py_ml)": [[5, "opensearch_py_ml.DataFrame"]], "agg() (opensearch_py_ml.dataframe method)": [[6, "opensearch_py_ml.DataFrame.agg"]], "aggregate() (opensearch_py_ml.dataframe method)": [[7, "opensearch_py_ml.DataFrame.aggregate"]], "columns (opensearch_py_ml.dataframe attribute)": [[8, "opensearch_py_ml.DataFrame.columns"]], "count() (opensearch_py_ml.dataframe method)": [[9, "opensearch_py_ml.DataFrame.count"]], "describe() (opensearch_py_ml.dataframe method)": [[10, "opensearch_py_ml.DataFrame.describe"]], "drop() (opensearch_py_ml.dataframe method)": [[11, "opensearch_py_ml.DataFrame.drop"]], "dtypes (opensearch_py_ml.dataframe attribute)": [[12, "opensearch_py_ml.DataFrame.dtypes"]], "empty (opensearch_py_ml.dataframe attribute)": [[13, "opensearch_py_ml.DataFrame.empty"]], "filter() (opensearch_py_ml.dataframe method)": [[14, "opensearch_py_ml.DataFrame.filter"]], "get() (opensearch_py_ml.dataframe method)": [[15, "opensearch_py_ml.DataFrame.get"]], "groupby() (opensearch_py_ml.dataframe method)": [[16, "opensearch_py_ml.DataFrame.groupby"]], "head() (opensearch_py_ml.dataframe method)": [[17, "opensearch_py_ml.DataFrame.head"]], "hist() (opensearch_py_ml.dataframe method)": [[18, "opensearch_py_ml.DataFrame.hist"]], "idxmax() (opensearch_py_ml.dataframe method)": [[19, "opensearch_py_ml.DataFrame.idxmax"]], "idxmin() (opensearch_py_ml.dataframe method)": [[20, "opensearch_py_ml.DataFrame.idxmin"]], "index (opensearch_py_ml.dataframe attribute)": [[21, "opensearch_py_ml.DataFrame.index"]], "info() (opensearch_py_ml.dataframe method)": [[22, "opensearch_py_ml.DataFrame.info"]], "iterrows() (opensearch_py_ml.dataframe method)": [[23, "opensearch_py_ml.DataFrame.iterrows"]], "itertuples() (opensearch_py_ml.dataframe method)": [[24, "opensearch_py_ml.DataFrame.itertuples"]], "keys() (opensearch_py_ml.dataframe method)": [[25, "opensearch_py_ml.DataFrame.keys"]], "mad() (opensearch_py_ml.dataframe method)": [[26, "opensearch_py_ml.DataFrame.mad"]], "max() (opensearch_py_ml.dataframe method)": [[27, "opensearch_py_ml.DataFrame.max"]], "mean() (opensearch_py_ml.dataframe method)": [[28, "opensearch_py_ml.DataFrame.mean"]], "median() (opensearch_py_ml.dataframe method)": [[29, "opensearch_py_ml.DataFrame.median"]], "min() (opensearch_py_ml.dataframe method)": [[30, "opensearch_py_ml.DataFrame.min"]], "mode() (opensearch_py_ml.dataframe method)": [[31, "opensearch_py_ml.DataFrame.mode"]], "ndim (opensearch_py_ml.dataframe attribute)": [[32, "opensearch_py_ml.DataFrame.ndim"]], "nunique() (opensearch_py_ml.dataframe method)": [[33, "opensearch_py_ml.DataFrame.nunique"]], "os_dtypes (opensearch_py_ml.dataframe attribute)": [[34, "opensearch_py_ml.DataFrame.os_dtypes"]], "os_info() (opensearch_py_ml.dataframe method)": [[35, "opensearch_py_ml.DataFrame.os_info"]], "os_match() (opensearch_py_ml.dataframe method)": [[36, "opensearch_py_ml.DataFrame.os_match"]], "os_query() (opensearch_py_ml.dataframe method)": [[37, "opensearch_py_ml.DataFrame.os_query"]], "quantile() (opensearch_py_ml.dataframe method)": [[38, "opensearch_py_ml.DataFrame.quantile"]], "query() (opensearch_py_ml.dataframe method)": [[39, "opensearch_py_ml.DataFrame.query"]], "sample() (opensearch_py_ml.dataframe method)": [[40, "opensearch_py_ml.DataFrame.sample"]], "select_dtypes() (opensearch_py_ml.dataframe method)": [[41, "opensearch_py_ml.DataFrame.select_dtypes"]], "shape (opensearch_py_ml.dataframe attribute)": [[42, "opensearch_py_ml.DataFrame.shape"]], "size (opensearch_py_ml.dataframe attribute)": [[43, "opensearch_py_ml.DataFrame.size"]], "std() (opensearch_py_ml.dataframe method)": [[44, "opensearch_py_ml.DataFrame.std"]], "sum() (opensearch_py_ml.dataframe method)": [[45, "opensearch_py_ml.DataFrame.sum"]], "tail() (opensearch_py_ml.dataframe method)": [[46, "opensearch_py_ml.DataFrame.tail"]], "to_csv() (opensearch_py_ml.dataframe method)": [[47, "opensearch_py_ml.DataFrame.to_csv"]], "to_html() (opensearch_py_ml.dataframe method)": [[48, "opensearch_py_ml.DataFrame.to_html"]], "to_numpy() (opensearch_py_ml.dataframe method)": [[49, "opensearch_py_ml.DataFrame.to_numpy"]], "to_pandas() (opensearch_py_ml.dataframe method)": [[50, "opensearch_py_ml.DataFrame.to_pandas"]], "to_string() (opensearch_py_ml.dataframe method)": [[51, "opensearch_py_ml.DataFrame.to_string"]], "values (opensearch_py_ml.dataframe attribute)": [[52, "opensearch_py_ml.DataFrame.values"]], "var() (opensearch_py_ml.dataframe method)": [[53, "opensearch_py_ml.DataFrame.var"]], "index (class in opensearch_py_ml)": [[54, "opensearch_py_ml.Index"]], "series (class in opensearch_py_ml)": [[55, "opensearch_py_ml.Series"]], "add() (opensearch_py_ml.series method)": [[56, "opensearch_py_ml.Series.add"]], "describe() (opensearch_py_ml.series method)": [[57, "opensearch_py_ml.Series.describe"]], "div() (opensearch_py_ml.series method)": [[58, "opensearch_py_ml.Series.div"]], "divide() (opensearch_py_ml.series method)": [[59, "opensearch_py_ml.Series.divide"]], "dtype (opensearch_py_ml.series attribute)": [[60, "opensearch_py_ml.Series.dtype"]], "dtypes (opensearch_py_ml.series attribute)": [[61, "opensearch_py_ml.Series.dtypes"]], "empty (opensearch_py_ml.series attribute)": [[62, "opensearch_py_ml.Series.empty"]], "filter() (opensearch_py_ml.series method)": [[64, "opensearch_py_ml.Series.filter"]], "floordiv() (opensearch_py_ml.series method)": [[65, "opensearch_py_ml.Series.floordiv"]], "head() (opensearch_py_ml.series method)": [[66, "opensearch_py_ml.Series.head"]], "hist() (opensearch_py_ml.series method)": [[67, "opensearch_py_ml.Series.hist"]], "index (opensearch_py_ml.series attribute)": [[68, "opensearch_py_ml.Series.index"]], "isin() (opensearch_py_ml.series method)": [[69, "opensearch_py_ml.Series.isin"]], "isna() (opensearch_py_ml.series method)": [[70, "opensearch_py_ml.Series.isna"]], "isnull() (opensearch_py_ml.series method)": [[71, "opensearch_py_ml.Series.isnull"]], "mad() (opensearch_py_ml.series method)": [[72, "opensearch_py_ml.Series.mad"]], "max() (opensearch_py_ml.series method)": [[73, "opensearch_py_ml.Series.max"]], "mean() (opensearch_py_ml.series method)": [[74, "opensearch_py_ml.Series.mean"]], "median() (opensearch_py_ml.series method)": [[75, "opensearch_py_ml.Series.median"]], "min() (opensearch_py_ml.series method)": [[76, "opensearch_py_ml.Series.min"]], "mod() (opensearch_py_ml.series method)": [[77, "opensearch_py_ml.Series.mod"]], "mode() (opensearch_py_ml.series method)": [[78, "opensearch_py_ml.Series.mode"]], "mul() (opensearch_py_ml.series method)": [[79, "opensearch_py_ml.Series.mul"]], "multiply() (opensearch_py_ml.series method)": [[80, "opensearch_py_ml.Series.multiply"]], "name (opensearch_py_ml.series attribute)": [[81, "opensearch_py_ml.Series.name"]], "ndim (opensearch_py_ml.series attribute)": [[82, "opensearch_py_ml.Series.ndim"]], "notna() (opensearch_py_ml.series method)": [[83, "opensearch_py_ml.Series.notna"]], "notnull() (opensearch_py_ml.series method)": [[84, "opensearch_py_ml.Series.notnull"]], "nunique() (opensearch_py_ml.series method)": [[85, "opensearch_py_ml.Series.nunique"]], "os_dtype (opensearch_py_ml.series attribute)": [[86, "opensearch_py_ml.Series.os_dtype"]], "os_info() (opensearch_py_ml.series method)": [[87, "opensearch_py_ml.Series.os_info"]], "os_match() (opensearch_py_ml.series method)": [[88, "opensearch_py_ml.Series.os_match"]], "pow() (opensearch_py_ml.series method)": [[89, "opensearch_py_ml.Series.pow"]], "quantile() (opensearch_py_ml.series method)": [[90, "opensearch_py_ml.Series.quantile"]], "radd() (opensearch_py_ml.series method)": [[91, "opensearch_py_ml.Series.radd"]], "rdiv() (opensearch_py_ml.series method)": [[92, "opensearch_py_ml.Series.rdiv"]], "rdivide() (opensearch_py_ml.series method)": [[93, "opensearch_py_ml.Series.rdivide"]], "rename() (opensearch_py_ml.series method)": [[94, "opensearch_py_ml.Series.rename"]], "rfloordiv() (opensearch_py_ml.series method)": [[95, "opensearch_py_ml.Series.rfloordiv"]], "rmod() (opensearch_py_ml.series method)": [[96, "opensearch_py_ml.Series.rmod"]], "rmul() (opensearch_py_ml.series method)": [[97, "opensearch_py_ml.Series.rmul"]], "rmultiply() (opensearch_py_ml.series method)": [[98, "opensearch_py_ml.Series.rmultiply"]], "rpow() (opensearch_py_ml.series method)": [[99, "opensearch_py_ml.Series.rpow"]], "rsub() (opensearch_py_ml.series method)": [[100, "opensearch_py_ml.Series.rsub"]], "rsubtract() (opensearch_py_ml.series method)": [[101, "opensearch_py_ml.Series.rsubtract"]], "rtruediv() (opensearch_py_ml.series method)": [[102, "opensearch_py_ml.Series.rtruediv"]], "sample() (opensearch_py_ml.series method)": [[103, "opensearch_py_ml.Series.sample"]], "shape (opensearch_py_ml.series attribute)": [[104, "opensearch_py_ml.Series.shape"]], "size (opensearch_py_ml.series attribute)": [[105, "opensearch_py_ml.Series.size"]], "std() (opensearch_py_ml.series method)": [[106, "opensearch_py_ml.Series.std"]], "sub() (opensearch_py_ml.series method)": [[107, "opensearch_py_ml.Series.sub"]], "subtract() (opensearch_py_ml.series method)": [[108, "opensearch_py_ml.Series.subtract"]], "sum() (opensearch_py_ml.series method)": [[109, "opensearch_py_ml.Series.sum"]], "tail() (opensearch_py_ml.series method)": [[110, "opensearch_py_ml.Series.tail"]], "to_numpy() (opensearch_py_ml.series method)": [[111, "opensearch_py_ml.Series.to_numpy"]], "to_pandas() (opensearch_py_ml.series method)": [[112, "opensearch_py_ml.Series.to_pandas"]], "to_string() (opensearch_py_ml.series method)": [[113, "opensearch_py_ml.Series.to_string"]], "truediv() (opensearch_py_ml.series method)": [[114, "opensearch_py_ml.Series.truediv"]], "unique() (opensearch_py_ml.series method)": [[115, "opensearch_py_ml.Series.unique"]], "value_counts() (opensearch_py_ml.series method)": [[116, "opensearch_py_ml.Series.value_counts"]], "var() (opensearch_py_ml.series method)": [[117, "opensearch_py_ml.Series.var"]], "csv_to_opensearch() (in module opensearch_py_ml.etl)": [[118, "opensearch_py_ml.etl.csv_to_opensearch"]], "dataframegroupby (class in opensearch_py_ml.groupby)": [[119, "opensearch_py_ml.groupby.DataFrameGroupBy"]], "agg() (opensearch_py_ml.groupby.dataframegroupby method)": [[120, "opensearch_py_ml.groupby.DataFrameGroupBy.agg"]], "aggregate() (opensearch_py_ml.groupby.dataframegroupby method)": [[121, "opensearch_py_ml.groupby.DataFrameGroupBy.aggregate"]], "count() (opensearch_py_ml.groupby.dataframegroupby method)": [[122, "opensearch_py_ml.groupby.DataFrameGroupBy.count"]], "mad() (opensearch_py_ml.groupby.dataframegroupby method)": [[123, "opensearch_py_ml.groupby.DataFrameGroupBy.mad"]], "max() (opensearch_py_ml.groupby.dataframegroupby method)": [[124, "opensearch_py_ml.groupby.DataFrameGroupBy.max"]], "mean() (opensearch_py_ml.groupby.dataframegroupby method)": [[125, "opensearch_py_ml.groupby.DataFrameGroupBy.mean"]], "median() (opensearch_py_ml.groupby.dataframegroupby method)": [[126, "opensearch_py_ml.groupby.DataFrameGroupBy.median"]], "min() (opensearch_py_ml.groupby.dataframegroupby method)": [[127, "opensearch_py_ml.groupby.DataFrameGroupBy.min"]], "nunique() (opensearch_py_ml.groupby.dataframegroupby method)": [[128, "opensearch_py_ml.groupby.DataFrameGroupBy.nunique"]], "quantile() (opensearch_py_ml.groupby.dataframegroupby method)": [[129, "opensearch_py_ml.groupby.DataFrameGroupBy.quantile"]], "std() (opensearch_py_ml.groupby.dataframegroupby method)": [[130, "opensearch_py_ml.groupby.DataFrameGroupBy.std"]], "sum() (opensearch_py_ml.groupby.dataframegroupby method)": [[131, "opensearch_py_ml.groupby.DataFrameGroupBy.sum"]], "var() (opensearch_py_ml.groupby.dataframegroupby method)": [[132, "opensearch_py_ml.groupby.DataFrameGroupBy.var"]], "upload_model() (in module opensearch_py_ml.ml_commons_integration.mlcommonclient)": [[134, "opensearch_py_ml.ml_commons_integration.MLCommonClient.upload_model"]], "opensearch_to_pandas() (opensearch_py_ml.etl method)": [[135, "opensearch_py_ml.etl.opensearch_to_pandas"]], "pandas_to_opensearch() (opensearch_py_ml.etl method)": [[136, "opensearch_py_ml.etl.pandas_to_opensearch"]]}})